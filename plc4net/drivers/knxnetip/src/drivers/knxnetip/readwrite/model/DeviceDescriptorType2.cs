/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

using System;
using System.Collections.Generic;
using System.Text;
using org.apache.plc4net.api.value;
using org.apache.plc4net.spi.generation;
using org.apache.plc4net.spi.model.values;

// Code generated by code-generation. DO NOT EDIT.

namespace org.apache.plc4net.drivers.knxnetip.readwrite.model
{

    public class DeviceDescriptorType2
    {


        // Properties.
        public ushort ManufacturerId { get; }
        public ushort DeviceType { get; }
        public byte Version { get; }
        public bool ReadSupported { get; }
        public bool WriteSupported { get; }
        public byte LogicalTagBase { get; }
        public ChannelInformation ChannelInfo1 { get; }
        public ChannelInformation ChannelInfo2 { get; }
        public ChannelInformation ChannelInfo3 { get; }
        public ChannelInformation ChannelInfo4 { get; }

        public DeviceDescriptorType2(ushort manufacturerId, ushort deviceType, byte version, bool readSupported, bool writeSupported, byte logicalTagBase, ChannelInformation channelInfo1, ChannelInformation channelInfo2, ChannelInformation channelInfo3, ChannelInformation channelInfo4)
        {
            ManufacturerId = manufacturerId;
            DeviceType = deviceType;
            Version = version;
            ReadSupported = readSupported;
            WriteSupported = writeSupported;
            LogicalTagBase = logicalTagBase;
            ChannelInfo1 = channelInfo1;
            ChannelInfo2 = channelInfo2;
            ChannelInfo3 = channelInfo3;
            ChannelInfo4 = channelInfo4;
        }

    }
}
