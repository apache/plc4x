/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

// Code generated by code-generation. DO NOT EDIT.

namespace org.apache.plc4net.drivers.knxnetip.readwrite.model
{

    public enum ComObjectValueType
    {
        BIT1 = 0x00,
        BIT2 = 0x01,
        BIT3 = 0x02,
        BIT4 = 0x03,
        BIT5 = 0x04,
        BIT6 = 0x05,
        BIT7 = 0x06,
        BYTE1 = 0x07,
        BYTE2 = 0x08,
        BYTE3 = 0x09,
        BYTE4 = 0x0A,
        BYTE6 = 0x0B,
        BYTE8 = 0x0C,
        BYTE10 = 0x0D,
        BYTE14 = 0x0E,
    }

    public static class ComObjectValueTypeInfo
    {

        public static byte? SizeInBytes(this ComObjectValueType value)
        {
            switch (value)
            {
                case ComObjectValueType.BIT1: { /* '0x00' */
                    return 1;
                }
                case ComObjectValueType.BIT2: { /* '0x01' */
                    return 1;
                }
                case ComObjectValueType.BIT3: { /* '0x02' */
                    return 1;
                }
                case ComObjectValueType.BIT4: { /* '0x03' */
                    return 1;
                }
                case ComObjectValueType.BIT5: { /* '0x04' */
                    return 1;
                }
                case ComObjectValueType.BIT6: { /* '0x05' */
                    return 1;
                }
                case ComObjectValueType.BIT7: { /* '0x06' */
                    return 1;
                }
                case ComObjectValueType.BYTE1: { /* '0x07' */
                    return 1;
                }
                case ComObjectValueType.BYTE2: { /* '0x08' */
                    return 2;
                }
                case ComObjectValueType.BYTE3: { /* '0x09' */
                    return 3;
                }
                case ComObjectValueType.BYTE4: { /* '0x0A' */
                    return 4;
                }
                case ComObjectValueType.BYTE6: { /* '0x0B' */
                    return 6;
                }
                case ComObjectValueType.BYTE8: { /* '0x0C' */
                    return 8;
                }
                case ComObjectValueType.BYTE10: { /* '0x0D' */
                    return 10;
                }
                case ComObjectValueType.BYTE14: { /* '0x0E' */
                    return 14;
                }
                default: {
                    return 0;
                }
            }
        }
    }

}

