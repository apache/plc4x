/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

// Code generated by code-generation. DO NOT EDIT.

namespace org.apache.plc4net.drivers.knxnetip.readwrite.model
{

    public enum DeviceDescriptor
    {
        TP1_BCU_1_SYSTEM_1_0 = 0x0010,
        TP1_BCU_1_SYSTEM_1_1 = 0x0011,
        TP1_BCU_1_SYSTEM_1_2 = 0x0012,
        TP1_BCU_1_SYSTEM_1_3 = 0x0013,
        TP1_BCU_2_SYSTEM_2_0 = 0x0020,
        TP1_BCU_2_SYSTEM_2_1 = 0x0021,
        TP1_BCU_2_SYSTEM_2_5 = 0x0025,
        TP1_SYSTEM_300 = 0x0300,
        TP1_BIM_M112_0 = 0x0700,
        TP1_BIM_M112_1 = 0x0701,
        TP1_BIM_M112_5 = 0x0705,
        TP1_SYSTEM_B = 0x07B0,
        TP1_IR_DECODER_0 = 0x0810,
        TP1_IR_DECODER_1 = 0x0811,
        TP1_COUPLER_0 = 0x0910,
        TP1_COUPLER_1 = 0x0911,
        TP1_COUPLER_2 = 0x0912,
        TP1_KNXNETIP_ROUTER = 0x091A,
        TP1_NONE_D = 0x0AFD,
        TP1_NONE_E = 0x0AFE,
        PL110_BCU_1_2 = 0x1012,
        PL110_BCU_1_3 = 0x1013,
        PL110_SYSTEM_B = 0x17B0,
        PL110_MEDIA_COUPLER_PL_TP = 0x1900,
        RF_BI_DIRECTIONAL_DEVICES = 0x2010,
        RF_UNI_DIRECTIONAL_DEVICES = 0x2110,
        TP0_BCU_1 = 0x3012,
        PL132_BCU_1 = 0x4012,
        KNX_IP_SYSTEM7 = 0x5705,
    }

    public static class DeviceDescriptorInfo
    {

        public static FirmwareType? FirmwareType(this DeviceDescriptor value)
        {
            switch (value)
            {
                case DeviceDescriptor.TP1_BCU_1_SYSTEM_1_0: { /* '0x0010' */
                    return model.FirmwareType.SYSTEM_1;
                }
                case DeviceDescriptor.TP1_BCU_1_SYSTEM_1_1: { /* '0x0011' */
                    return model.FirmwareType.SYSTEM_1;
                }
                case DeviceDescriptor.TP1_BCU_1_SYSTEM_1_2: { /* '0x0012' */
                    return model.FirmwareType.SYSTEM_1;
                }
                case DeviceDescriptor.TP1_BCU_1_SYSTEM_1_3: { /* '0x0013' */
                    return model.FirmwareType.SYSTEM_1;
                }
                case DeviceDescriptor.TP1_BCU_2_SYSTEM_2_0: { /* '0x0020' */
                    return model.FirmwareType.SYSTEM_2;
                }
                case DeviceDescriptor.TP1_BCU_2_SYSTEM_2_1: { /* '0x0021' */
                    return model.FirmwareType.SYSTEM_2;
                }
                case DeviceDescriptor.TP1_BCU_2_SYSTEM_2_5: { /* '0x0025' */
                    return model.FirmwareType.SYSTEM_2;
                }
                case DeviceDescriptor.TP1_SYSTEM_300: { /* '0x0300' */
                    return model.FirmwareType.SYSTEM_300;
                }
                case DeviceDescriptor.TP1_BIM_M112_0: { /* '0x0700' */
                    return model.FirmwareType.SYSTEM_7;
                }
                case DeviceDescriptor.TP1_BIM_M112_1: { /* '0x0701' */
                    return model.FirmwareType.SYSTEM_7;
                }
                case DeviceDescriptor.TP1_BIM_M112_5: { /* '0x0705' */
                    return model.FirmwareType.SYSTEM_7;
                }
                case DeviceDescriptor.TP1_SYSTEM_B: { /* '0x07B0' */
                    return model.FirmwareType.SYSTEM_B;
                }
                case DeviceDescriptor.TP1_IR_DECODER_0: { /* '0x0810' */
                    return model.FirmwareType.IR_DECODER;
                }
                case DeviceDescriptor.TP1_IR_DECODER_1: { /* '0x0811' */
                    return model.FirmwareType.IR_DECODER;
                }
                case DeviceDescriptor.TP1_COUPLER_0: { /* '0x0910' */
                    return model.FirmwareType.COUPLER;
                }
                case DeviceDescriptor.TP1_COUPLER_1: { /* '0x0911' */
                    return model.FirmwareType.COUPLER;
                }
                case DeviceDescriptor.TP1_COUPLER_2: { /* '0x0912' */
                    return model.FirmwareType.COUPLER;
                }
                case DeviceDescriptor.TP1_KNXNETIP_ROUTER: { /* '0x091A' */
                    return model.FirmwareType.COUPLER;
                }
                case DeviceDescriptor.TP1_NONE_D: { /* '0x0AFD' */
                    return model.FirmwareType.NONE;
                }
                case DeviceDescriptor.TP1_NONE_E: { /* '0x0AFE' */
                    return model.FirmwareType.NONE;
                }
                case DeviceDescriptor.PL110_BCU_1_2: { /* '0x1012' */
                    return model.FirmwareType.SYSTEM_1;
                }
                case DeviceDescriptor.PL110_BCU_1_3: { /* '0x1013' */
                    return model.FirmwareType.SYSTEM_1;
                }
                case DeviceDescriptor.PL110_SYSTEM_B: { /* '0x17B0' */
                    return model.FirmwareType.SYSTEM_B;
                }
                case DeviceDescriptor.PL110_MEDIA_COUPLER_PL_TP: { /* '0x1900' */
                    return model.FirmwareType.MEDIA_COUPLER_PL_TP;
                }
                case DeviceDescriptor.RF_BI_DIRECTIONAL_DEVICES: { /* '0x2010' */
                    return model.FirmwareType.RF_BI_DIRECTIONAL_DEVICES;
                }
                case DeviceDescriptor.RF_UNI_DIRECTIONAL_DEVICES: { /* '0x2110' */
                    return model.FirmwareType.RF_UNI_DIRECTIONAL_DEVICES;
                }
                case DeviceDescriptor.TP0_BCU_1: { /* '0x3012' */
                    return model.FirmwareType.SYSTEM_1;
                }
                case DeviceDescriptor.PL132_BCU_1: { /* '0x4012' */
                    return model.FirmwareType.SYSTEM_1;
                }
                case DeviceDescriptor.KNX_IP_SYSTEM7: { /* '0x5705' */
                    return model.FirmwareType.SYSTEM_7;
                }
                default: {
                    return null;
                }
            }
        }

        public static DeviceDescriptorMediumType? MediumType(this DeviceDescriptor value)
        {
            switch (value)
            {
                case DeviceDescriptor.TP1_BCU_1_SYSTEM_1_0: { /* '0x0010' */
                    return model.DeviceDescriptorMediumType.TP1;
                }
                case DeviceDescriptor.TP1_BCU_1_SYSTEM_1_1: { /* '0x0011' */
                    return model.DeviceDescriptorMediumType.TP1;
                }
                case DeviceDescriptor.TP1_BCU_1_SYSTEM_1_2: { /* '0x0012' */
                    return model.DeviceDescriptorMediumType.TP1;
                }
                case DeviceDescriptor.TP1_BCU_1_SYSTEM_1_3: { /* '0x0013' */
                    return model.DeviceDescriptorMediumType.TP1;
                }
                case DeviceDescriptor.TP1_BCU_2_SYSTEM_2_0: { /* '0x0020' */
                    return model.DeviceDescriptorMediumType.TP1;
                }
                case DeviceDescriptor.TP1_BCU_2_SYSTEM_2_1: { /* '0x0021' */
                    return model.DeviceDescriptorMediumType.TP1;
                }
                case DeviceDescriptor.TP1_BCU_2_SYSTEM_2_5: { /* '0x0025' */
                    return model.DeviceDescriptorMediumType.TP1;
                }
                case DeviceDescriptor.TP1_SYSTEM_300: { /* '0x0300' */
                    return model.DeviceDescriptorMediumType.TP1;
                }
                case DeviceDescriptor.TP1_BIM_M112_0: { /* '0x0700' */
                    return model.DeviceDescriptorMediumType.TP1;
                }
                case DeviceDescriptor.TP1_BIM_M112_1: { /* '0x0701' */
                    return model.DeviceDescriptorMediumType.TP1;
                }
                case DeviceDescriptor.TP1_BIM_M112_5: { /* '0x0705' */
                    return model.DeviceDescriptorMediumType.TP1;
                }
                case DeviceDescriptor.TP1_SYSTEM_B: { /* '0x07B0' */
                    return model.DeviceDescriptorMediumType.TP1;
                }
                case DeviceDescriptor.TP1_IR_DECODER_0: { /* '0x0810' */
                    return model.DeviceDescriptorMediumType.TP1;
                }
                case DeviceDescriptor.TP1_IR_DECODER_1: { /* '0x0811' */
                    return model.DeviceDescriptorMediumType.TP1;
                }
                case DeviceDescriptor.TP1_COUPLER_0: { /* '0x0910' */
                    return model.DeviceDescriptorMediumType.TP1;
                }
                case DeviceDescriptor.TP1_COUPLER_1: { /* '0x0911' */
                    return model.DeviceDescriptorMediumType.TP1;
                }
                case DeviceDescriptor.TP1_COUPLER_2: { /* '0x0912' */
                    return model.DeviceDescriptorMediumType.TP1;
                }
                case DeviceDescriptor.TP1_KNXNETIP_ROUTER: { /* '0x091A' */
                    return model.DeviceDescriptorMediumType.TP1;
                }
                case DeviceDescriptor.TP1_NONE_D: { /* '0x0AFD' */
                    return model.DeviceDescriptorMediumType.TP1;
                }
                case DeviceDescriptor.TP1_NONE_E: { /* '0x0AFE' */
                    return model.DeviceDescriptorMediumType.TP1;
                }
                case DeviceDescriptor.PL110_BCU_1_2: { /* '0x1012' */
                    return model.DeviceDescriptorMediumType.PL110;
                }
                case DeviceDescriptor.PL110_BCU_1_3: { /* '0x1013' */
                    return model.DeviceDescriptorMediumType.PL110;
                }
                case DeviceDescriptor.PL110_SYSTEM_B: { /* '0x17B0' */
                    return model.DeviceDescriptorMediumType.PL110;
                }
                case DeviceDescriptor.PL110_MEDIA_COUPLER_PL_TP: { /* '0x1900' */
                    return model.DeviceDescriptorMediumType.PL110;
                }
                case DeviceDescriptor.RF_BI_DIRECTIONAL_DEVICES: { /* '0x2010' */
                    return model.DeviceDescriptorMediumType.RF;
                }
                case DeviceDescriptor.RF_UNI_DIRECTIONAL_DEVICES: { /* '0x2110' */
                    return model.DeviceDescriptorMediumType.RF;
                }
                case DeviceDescriptor.TP0_BCU_1: { /* '0x3012' */
                    return model.DeviceDescriptorMediumType.TP0;
                }
                case DeviceDescriptor.PL132_BCU_1: { /* '0x4012' */
                    return model.DeviceDescriptorMediumType.PL132;
                }
                case DeviceDescriptor.KNX_IP_SYSTEM7: { /* '0x5705' */
                    return model.DeviceDescriptorMediumType.KNX_IP;
                }
                default: {
                    return null;
                }
            }
        }
    }

}

