/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package model

import (
	"context"
	"fmt"

	"github.com/pkg/errors"
	"github.com/rs/zerolog"

	. "github.com/apache/plc4x/plc4go/spi/codegen/fields"
	. "github.com/apache/plc4x/plc4go/spi/codegen/io"
	"github.com/apache/plc4x/plc4go/spi/utils"
)

// Code generated by code-generation. DO NOT EDIT.

// OctetStringValue is the corresponding interface of OctetStringValue
type OctetStringValue interface {
	fmt.Stringer
	utils.LengthAware
	utils.Serializable
	utils.Copyable
	// GetObjectIdentifier returns ObjectIdentifier (property field)
	GetObjectIdentifier() ReadableProperty
	// GetObjectName returns ObjectName (property field)
	GetObjectName() ReadableProperty
	// GetObjectType returns ObjectType (property field)
	GetObjectType() ReadableProperty
	// GetDescription returns Description (property field)
	GetDescription() OptionalProperty
	// GetPresentValue returns PresentValue (property field)
	GetPresentValue() ReadableProperty
	// GetStatusFlags returns StatusFlags (property field)
	GetStatusFlags() ReadableProperty
	// GetEventState returns EventState (property field)
	GetEventState() OptionalProperty
	// GetReliability returns Reliability (property field)
	GetReliability() OptionalProperty
	// GetOutOfService returns OutOfService (property field)
	GetOutOfService() OptionalProperty
	// GetPriorityArray returns PriorityArray (property field)
	GetPriorityArray() OptionalProperty
	// GetRelinquishDefault returns RelinquishDefault (property field)
	GetRelinquishDefault() OptionalProperty
	// GetReliabilityEvaluationInhibit returns ReliabilityEvaluationInhibit (property field)
	GetReliabilityEvaluationInhibit() OptionalProperty
	// GetPropertyList returns PropertyList (property field)
	GetPropertyList() ReadableProperty
	// GetCurrentCommandPriority returns CurrentCommandPriority (property field)
	GetCurrentCommandPriority() OptionalProperty
	// GetValueSource returns ValueSource (property field)
	GetValueSource() OptionalProperty
	// GetValueSourceArray returns ValueSourceArray (property field)
	GetValueSourceArray() OptionalProperty
	// GetLastCommandTime returns LastCommandTime (property field)
	GetLastCommandTime() OptionalProperty
	// GetCommandTimeArray returns CommandTimeArray (property field)
	GetCommandTimeArray() OptionalProperty
	// GetTags returns Tags (property field)
	GetTags() OptionalProperty
	// GetProfileLocation returns ProfileLocation (property field)
	GetProfileLocation() OptionalProperty
	// GetProfileName returns ProfileName (property field)
	GetProfileName() OptionalProperty
	// IsOctetStringValue is a marker method to prevent unintentional type checks (interfaces of same signature)
	IsOctetStringValue()
	// CreateBuilder creates a OctetStringValueBuilder
	CreateOctetStringValueBuilder() OctetStringValueBuilder
}

// _OctetStringValue is the data-structure of this message
type _OctetStringValue struct {
	ObjectIdentifier             ReadableProperty
	ObjectName                   ReadableProperty
	ObjectType                   ReadableProperty
	Description                  OptionalProperty
	PresentValue                 ReadableProperty
	StatusFlags                  ReadableProperty
	EventState                   OptionalProperty
	Reliability                  OptionalProperty
	OutOfService                 OptionalProperty
	PriorityArray                OptionalProperty
	RelinquishDefault            OptionalProperty
	ReliabilityEvaluationInhibit OptionalProperty
	PropertyList                 ReadableProperty
	CurrentCommandPriority       OptionalProperty
	ValueSource                  OptionalProperty
	ValueSourceArray             OptionalProperty
	LastCommandTime              OptionalProperty
	CommandTimeArray             OptionalProperty
	Tags                         OptionalProperty
	ProfileLocation              OptionalProperty
	ProfileName                  OptionalProperty
}

var _ OctetStringValue = (*_OctetStringValue)(nil)

// NewOctetStringValue factory function for _OctetStringValue
func NewOctetStringValue(objectIdentifier ReadableProperty, objectName ReadableProperty, objectType ReadableProperty, description OptionalProperty, presentValue ReadableProperty, statusFlags ReadableProperty, eventState OptionalProperty, reliability OptionalProperty, outOfService OptionalProperty, priorityArray OptionalProperty, relinquishDefault OptionalProperty, reliabilityEvaluationInhibit OptionalProperty, propertyList ReadableProperty, currentCommandPriority OptionalProperty, valueSource OptionalProperty, valueSourceArray OptionalProperty, lastCommandTime OptionalProperty, commandTimeArray OptionalProperty, tags OptionalProperty, profileLocation OptionalProperty, profileName OptionalProperty) *_OctetStringValue {
	if objectIdentifier == nil {
		panic("objectIdentifier of type ReadableProperty for OctetStringValue must not be nil")
	}
	if objectName == nil {
		panic("objectName of type ReadableProperty for OctetStringValue must not be nil")
	}
	if objectType == nil {
		panic("objectType of type ReadableProperty for OctetStringValue must not be nil")
	}
	if description == nil {
		panic("description of type OptionalProperty for OctetStringValue must not be nil")
	}
	if presentValue == nil {
		panic("presentValue of type ReadableProperty for OctetStringValue must not be nil")
	}
	if statusFlags == nil {
		panic("statusFlags of type ReadableProperty for OctetStringValue must not be nil")
	}
	if eventState == nil {
		panic("eventState of type OptionalProperty for OctetStringValue must not be nil")
	}
	if reliability == nil {
		panic("reliability of type OptionalProperty for OctetStringValue must not be nil")
	}
	if outOfService == nil {
		panic("outOfService of type OptionalProperty for OctetStringValue must not be nil")
	}
	if priorityArray == nil {
		panic("priorityArray of type OptionalProperty for OctetStringValue must not be nil")
	}
	if relinquishDefault == nil {
		panic("relinquishDefault of type OptionalProperty for OctetStringValue must not be nil")
	}
	if reliabilityEvaluationInhibit == nil {
		panic("reliabilityEvaluationInhibit of type OptionalProperty for OctetStringValue must not be nil")
	}
	if propertyList == nil {
		panic("propertyList of type ReadableProperty for OctetStringValue must not be nil")
	}
	if currentCommandPriority == nil {
		panic("currentCommandPriority of type OptionalProperty for OctetStringValue must not be nil")
	}
	if valueSource == nil {
		panic("valueSource of type OptionalProperty for OctetStringValue must not be nil")
	}
	if valueSourceArray == nil {
		panic("valueSourceArray of type OptionalProperty for OctetStringValue must not be nil")
	}
	if lastCommandTime == nil {
		panic("lastCommandTime of type OptionalProperty for OctetStringValue must not be nil")
	}
	if commandTimeArray == nil {
		panic("commandTimeArray of type OptionalProperty for OctetStringValue must not be nil")
	}
	if tags == nil {
		panic("tags of type OptionalProperty for OctetStringValue must not be nil")
	}
	if profileLocation == nil {
		panic("profileLocation of type OptionalProperty for OctetStringValue must not be nil")
	}
	if profileName == nil {
		panic("profileName of type OptionalProperty for OctetStringValue must not be nil")
	}
	return &_OctetStringValue{ObjectIdentifier: objectIdentifier, ObjectName: objectName, ObjectType: objectType, Description: description, PresentValue: presentValue, StatusFlags: statusFlags, EventState: eventState, Reliability: reliability, OutOfService: outOfService, PriorityArray: priorityArray, RelinquishDefault: relinquishDefault, ReliabilityEvaluationInhibit: reliabilityEvaluationInhibit, PropertyList: propertyList, CurrentCommandPriority: currentCommandPriority, ValueSource: valueSource, ValueSourceArray: valueSourceArray, LastCommandTime: lastCommandTime, CommandTimeArray: commandTimeArray, Tags: tags, ProfileLocation: profileLocation, ProfileName: profileName}
}

///////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////
/////////////////////// Builder
///////////////////////

// OctetStringValueBuilder is a builder for OctetStringValue
type OctetStringValueBuilder interface {
	utils.Copyable
	// WithMandatoryFields adds all mandatory fields (convenience for using multiple builder calls)
	WithMandatoryFields(objectIdentifier ReadableProperty, objectName ReadableProperty, objectType ReadableProperty, description OptionalProperty, presentValue ReadableProperty, statusFlags ReadableProperty, eventState OptionalProperty, reliability OptionalProperty, outOfService OptionalProperty, priorityArray OptionalProperty, relinquishDefault OptionalProperty, reliabilityEvaluationInhibit OptionalProperty, propertyList ReadableProperty, currentCommandPriority OptionalProperty, valueSource OptionalProperty, valueSourceArray OptionalProperty, lastCommandTime OptionalProperty, commandTimeArray OptionalProperty, tags OptionalProperty, profileLocation OptionalProperty, profileName OptionalProperty) OctetStringValueBuilder
	// WithObjectIdentifier adds ObjectIdentifier (property field)
	WithObjectIdentifier(ReadableProperty) OctetStringValueBuilder
	// WithObjectIdentifierBuilder adds ObjectIdentifier (property field) which is build by the builder
	WithObjectIdentifierBuilder(func(ReadablePropertyBuilder) ReadablePropertyBuilder) OctetStringValueBuilder
	// WithObjectName adds ObjectName (property field)
	WithObjectName(ReadableProperty) OctetStringValueBuilder
	// WithObjectNameBuilder adds ObjectName (property field) which is build by the builder
	WithObjectNameBuilder(func(ReadablePropertyBuilder) ReadablePropertyBuilder) OctetStringValueBuilder
	// WithObjectType adds ObjectType (property field)
	WithObjectType(ReadableProperty) OctetStringValueBuilder
	// WithObjectTypeBuilder adds ObjectType (property field) which is build by the builder
	WithObjectTypeBuilder(func(ReadablePropertyBuilder) ReadablePropertyBuilder) OctetStringValueBuilder
	// WithDescription adds Description (property field)
	WithDescription(OptionalProperty) OctetStringValueBuilder
	// WithDescriptionBuilder adds Description (property field) which is build by the builder
	WithDescriptionBuilder(func(OptionalPropertyBuilder) OptionalPropertyBuilder) OctetStringValueBuilder
	// WithPresentValue adds PresentValue (property field)
	WithPresentValue(ReadableProperty) OctetStringValueBuilder
	// WithPresentValueBuilder adds PresentValue (property field) which is build by the builder
	WithPresentValueBuilder(func(ReadablePropertyBuilder) ReadablePropertyBuilder) OctetStringValueBuilder
	// WithStatusFlags adds StatusFlags (property field)
	WithStatusFlags(ReadableProperty) OctetStringValueBuilder
	// WithStatusFlagsBuilder adds StatusFlags (property field) which is build by the builder
	WithStatusFlagsBuilder(func(ReadablePropertyBuilder) ReadablePropertyBuilder) OctetStringValueBuilder
	// WithEventState adds EventState (property field)
	WithEventState(OptionalProperty) OctetStringValueBuilder
	// WithEventStateBuilder adds EventState (property field) which is build by the builder
	WithEventStateBuilder(func(OptionalPropertyBuilder) OptionalPropertyBuilder) OctetStringValueBuilder
	// WithReliability adds Reliability (property field)
	WithReliability(OptionalProperty) OctetStringValueBuilder
	// WithReliabilityBuilder adds Reliability (property field) which is build by the builder
	WithReliabilityBuilder(func(OptionalPropertyBuilder) OptionalPropertyBuilder) OctetStringValueBuilder
	// WithOutOfService adds OutOfService (property field)
	WithOutOfService(OptionalProperty) OctetStringValueBuilder
	// WithOutOfServiceBuilder adds OutOfService (property field) which is build by the builder
	WithOutOfServiceBuilder(func(OptionalPropertyBuilder) OptionalPropertyBuilder) OctetStringValueBuilder
	// WithPriorityArray adds PriorityArray (property field)
	WithPriorityArray(OptionalProperty) OctetStringValueBuilder
	// WithPriorityArrayBuilder adds PriorityArray (property field) which is build by the builder
	WithPriorityArrayBuilder(func(OptionalPropertyBuilder) OptionalPropertyBuilder) OctetStringValueBuilder
	// WithRelinquishDefault adds RelinquishDefault (property field)
	WithRelinquishDefault(OptionalProperty) OctetStringValueBuilder
	// WithRelinquishDefaultBuilder adds RelinquishDefault (property field) which is build by the builder
	WithRelinquishDefaultBuilder(func(OptionalPropertyBuilder) OptionalPropertyBuilder) OctetStringValueBuilder
	// WithReliabilityEvaluationInhibit adds ReliabilityEvaluationInhibit (property field)
	WithReliabilityEvaluationInhibit(OptionalProperty) OctetStringValueBuilder
	// WithReliabilityEvaluationInhibitBuilder adds ReliabilityEvaluationInhibit (property field) which is build by the builder
	WithReliabilityEvaluationInhibitBuilder(func(OptionalPropertyBuilder) OptionalPropertyBuilder) OctetStringValueBuilder
	// WithPropertyList adds PropertyList (property field)
	WithPropertyList(ReadableProperty) OctetStringValueBuilder
	// WithPropertyListBuilder adds PropertyList (property field) which is build by the builder
	WithPropertyListBuilder(func(ReadablePropertyBuilder) ReadablePropertyBuilder) OctetStringValueBuilder
	// WithCurrentCommandPriority adds CurrentCommandPriority (property field)
	WithCurrentCommandPriority(OptionalProperty) OctetStringValueBuilder
	// WithCurrentCommandPriorityBuilder adds CurrentCommandPriority (property field) which is build by the builder
	WithCurrentCommandPriorityBuilder(func(OptionalPropertyBuilder) OptionalPropertyBuilder) OctetStringValueBuilder
	// WithValueSource adds ValueSource (property field)
	WithValueSource(OptionalProperty) OctetStringValueBuilder
	// WithValueSourceBuilder adds ValueSource (property field) which is build by the builder
	WithValueSourceBuilder(func(OptionalPropertyBuilder) OptionalPropertyBuilder) OctetStringValueBuilder
	// WithValueSourceArray adds ValueSourceArray (property field)
	WithValueSourceArray(OptionalProperty) OctetStringValueBuilder
	// WithValueSourceArrayBuilder adds ValueSourceArray (property field) which is build by the builder
	WithValueSourceArrayBuilder(func(OptionalPropertyBuilder) OptionalPropertyBuilder) OctetStringValueBuilder
	// WithLastCommandTime adds LastCommandTime (property field)
	WithLastCommandTime(OptionalProperty) OctetStringValueBuilder
	// WithLastCommandTimeBuilder adds LastCommandTime (property field) which is build by the builder
	WithLastCommandTimeBuilder(func(OptionalPropertyBuilder) OptionalPropertyBuilder) OctetStringValueBuilder
	// WithCommandTimeArray adds CommandTimeArray (property field)
	WithCommandTimeArray(OptionalProperty) OctetStringValueBuilder
	// WithCommandTimeArrayBuilder adds CommandTimeArray (property field) which is build by the builder
	WithCommandTimeArrayBuilder(func(OptionalPropertyBuilder) OptionalPropertyBuilder) OctetStringValueBuilder
	// WithTags adds Tags (property field)
	WithTags(OptionalProperty) OctetStringValueBuilder
	// WithTagsBuilder adds Tags (property field) which is build by the builder
	WithTagsBuilder(func(OptionalPropertyBuilder) OptionalPropertyBuilder) OctetStringValueBuilder
	// WithProfileLocation adds ProfileLocation (property field)
	WithProfileLocation(OptionalProperty) OctetStringValueBuilder
	// WithProfileLocationBuilder adds ProfileLocation (property field) which is build by the builder
	WithProfileLocationBuilder(func(OptionalPropertyBuilder) OptionalPropertyBuilder) OctetStringValueBuilder
	// WithProfileName adds ProfileName (property field)
	WithProfileName(OptionalProperty) OctetStringValueBuilder
	// WithProfileNameBuilder adds ProfileName (property field) which is build by the builder
	WithProfileNameBuilder(func(OptionalPropertyBuilder) OptionalPropertyBuilder) OctetStringValueBuilder
	// Build builds the OctetStringValue or returns an error if something is wrong
	Build() (OctetStringValue, error)
	// MustBuild does the same as Build but panics on error
	MustBuild() OctetStringValue
}

// NewOctetStringValueBuilder() creates a OctetStringValueBuilder
func NewOctetStringValueBuilder() OctetStringValueBuilder {
	return &_OctetStringValueBuilder{_OctetStringValue: new(_OctetStringValue)}
}

type _OctetStringValueBuilder struct {
	*_OctetStringValue

	err *utils.MultiError
}

var _ (OctetStringValueBuilder) = (*_OctetStringValueBuilder)(nil)

func (b *_OctetStringValueBuilder) WithMandatoryFields(objectIdentifier ReadableProperty, objectName ReadableProperty, objectType ReadableProperty, description OptionalProperty, presentValue ReadableProperty, statusFlags ReadableProperty, eventState OptionalProperty, reliability OptionalProperty, outOfService OptionalProperty, priorityArray OptionalProperty, relinquishDefault OptionalProperty, reliabilityEvaluationInhibit OptionalProperty, propertyList ReadableProperty, currentCommandPriority OptionalProperty, valueSource OptionalProperty, valueSourceArray OptionalProperty, lastCommandTime OptionalProperty, commandTimeArray OptionalProperty, tags OptionalProperty, profileLocation OptionalProperty, profileName OptionalProperty) OctetStringValueBuilder {
	return b.WithObjectIdentifier(objectIdentifier).WithObjectName(objectName).WithObjectType(objectType).WithDescription(description).WithPresentValue(presentValue).WithStatusFlags(statusFlags).WithEventState(eventState).WithReliability(reliability).WithOutOfService(outOfService).WithPriorityArray(priorityArray).WithRelinquishDefault(relinquishDefault).WithReliabilityEvaluationInhibit(reliabilityEvaluationInhibit).WithPropertyList(propertyList).WithCurrentCommandPriority(currentCommandPriority).WithValueSource(valueSource).WithValueSourceArray(valueSourceArray).WithLastCommandTime(lastCommandTime).WithCommandTimeArray(commandTimeArray).WithTags(tags).WithProfileLocation(profileLocation).WithProfileName(profileName)
}

func (b *_OctetStringValueBuilder) WithObjectIdentifier(objectIdentifier ReadableProperty) OctetStringValueBuilder {
	b.ObjectIdentifier = objectIdentifier
	return b
}

func (b *_OctetStringValueBuilder) WithObjectIdentifierBuilder(builderSupplier func(ReadablePropertyBuilder) ReadablePropertyBuilder) OctetStringValueBuilder {
	builder := builderSupplier(b.ObjectIdentifier.CreateReadablePropertyBuilder())
	var err error
	b.ObjectIdentifier, err = builder.Build()
	if err != nil {
		if b.err == nil {
			b.err = &utils.MultiError{MainError: errors.New("sub builder failed")}
		}
		b.err.Append(errors.Wrap(err, "ReadablePropertyBuilder failed"))
	}
	return b
}

func (b *_OctetStringValueBuilder) WithObjectName(objectName ReadableProperty) OctetStringValueBuilder {
	b.ObjectName = objectName
	return b
}

func (b *_OctetStringValueBuilder) WithObjectNameBuilder(builderSupplier func(ReadablePropertyBuilder) ReadablePropertyBuilder) OctetStringValueBuilder {
	builder := builderSupplier(b.ObjectName.CreateReadablePropertyBuilder())
	var err error
	b.ObjectName, err = builder.Build()
	if err != nil {
		if b.err == nil {
			b.err = &utils.MultiError{MainError: errors.New("sub builder failed")}
		}
		b.err.Append(errors.Wrap(err, "ReadablePropertyBuilder failed"))
	}
	return b
}

func (b *_OctetStringValueBuilder) WithObjectType(objectType ReadableProperty) OctetStringValueBuilder {
	b.ObjectType = objectType
	return b
}

func (b *_OctetStringValueBuilder) WithObjectTypeBuilder(builderSupplier func(ReadablePropertyBuilder) ReadablePropertyBuilder) OctetStringValueBuilder {
	builder := builderSupplier(b.ObjectType.CreateReadablePropertyBuilder())
	var err error
	b.ObjectType, err = builder.Build()
	if err != nil {
		if b.err == nil {
			b.err = &utils.MultiError{MainError: errors.New("sub builder failed")}
		}
		b.err.Append(errors.Wrap(err, "ReadablePropertyBuilder failed"))
	}
	return b
}

func (b *_OctetStringValueBuilder) WithDescription(description OptionalProperty) OctetStringValueBuilder {
	b.Description = description
	return b
}

func (b *_OctetStringValueBuilder) WithDescriptionBuilder(builderSupplier func(OptionalPropertyBuilder) OptionalPropertyBuilder) OctetStringValueBuilder {
	builder := builderSupplier(b.Description.CreateOptionalPropertyBuilder())
	var err error
	b.Description, err = builder.Build()
	if err != nil {
		if b.err == nil {
			b.err = &utils.MultiError{MainError: errors.New("sub builder failed")}
		}
		b.err.Append(errors.Wrap(err, "OptionalPropertyBuilder failed"))
	}
	return b
}

func (b *_OctetStringValueBuilder) WithPresentValue(presentValue ReadableProperty) OctetStringValueBuilder {
	b.PresentValue = presentValue
	return b
}

func (b *_OctetStringValueBuilder) WithPresentValueBuilder(builderSupplier func(ReadablePropertyBuilder) ReadablePropertyBuilder) OctetStringValueBuilder {
	builder := builderSupplier(b.PresentValue.CreateReadablePropertyBuilder())
	var err error
	b.PresentValue, err = builder.Build()
	if err != nil {
		if b.err == nil {
			b.err = &utils.MultiError{MainError: errors.New("sub builder failed")}
		}
		b.err.Append(errors.Wrap(err, "ReadablePropertyBuilder failed"))
	}
	return b
}

func (b *_OctetStringValueBuilder) WithStatusFlags(statusFlags ReadableProperty) OctetStringValueBuilder {
	b.StatusFlags = statusFlags
	return b
}

func (b *_OctetStringValueBuilder) WithStatusFlagsBuilder(builderSupplier func(ReadablePropertyBuilder) ReadablePropertyBuilder) OctetStringValueBuilder {
	builder := builderSupplier(b.StatusFlags.CreateReadablePropertyBuilder())
	var err error
	b.StatusFlags, err = builder.Build()
	if err != nil {
		if b.err == nil {
			b.err = &utils.MultiError{MainError: errors.New("sub builder failed")}
		}
		b.err.Append(errors.Wrap(err, "ReadablePropertyBuilder failed"))
	}
	return b
}

func (b *_OctetStringValueBuilder) WithEventState(eventState OptionalProperty) OctetStringValueBuilder {
	b.EventState = eventState
	return b
}

func (b *_OctetStringValueBuilder) WithEventStateBuilder(builderSupplier func(OptionalPropertyBuilder) OptionalPropertyBuilder) OctetStringValueBuilder {
	builder := builderSupplier(b.EventState.CreateOptionalPropertyBuilder())
	var err error
	b.EventState, err = builder.Build()
	if err != nil {
		if b.err == nil {
			b.err = &utils.MultiError{MainError: errors.New("sub builder failed")}
		}
		b.err.Append(errors.Wrap(err, "OptionalPropertyBuilder failed"))
	}
	return b
}

func (b *_OctetStringValueBuilder) WithReliability(reliability OptionalProperty) OctetStringValueBuilder {
	b.Reliability = reliability
	return b
}

func (b *_OctetStringValueBuilder) WithReliabilityBuilder(builderSupplier func(OptionalPropertyBuilder) OptionalPropertyBuilder) OctetStringValueBuilder {
	builder := builderSupplier(b.Reliability.CreateOptionalPropertyBuilder())
	var err error
	b.Reliability, err = builder.Build()
	if err != nil {
		if b.err == nil {
			b.err = &utils.MultiError{MainError: errors.New("sub builder failed")}
		}
		b.err.Append(errors.Wrap(err, "OptionalPropertyBuilder failed"))
	}
	return b
}

func (b *_OctetStringValueBuilder) WithOutOfService(outOfService OptionalProperty) OctetStringValueBuilder {
	b.OutOfService = outOfService
	return b
}

func (b *_OctetStringValueBuilder) WithOutOfServiceBuilder(builderSupplier func(OptionalPropertyBuilder) OptionalPropertyBuilder) OctetStringValueBuilder {
	builder := builderSupplier(b.OutOfService.CreateOptionalPropertyBuilder())
	var err error
	b.OutOfService, err = builder.Build()
	if err != nil {
		if b.err == nil {
			b.err = &utils.MultiError{MainError: errors.New("sub builder failed")}
		}
		b.err.Append(errors.Wrap(err, "OptionalPropertyBuilder failed"))
	}
	return b
}

func (b *_OctetStringValueBuilder) WithPriorityArray(priorityArray OptionalProperty) OctetStringValueBuilder {
	b.PriorityArray = priorityArray
	return b
}

func (b *_OctetStringValueBuilder) WithPriorityArrayBuilder(builderSupplier func(OptionalPropertyBuilder) OptionalPropertyBuilder) OctetStringValueBuilder {
	builder := builderSupplier(b.PriorityArray.CreateOptionalPropertyBuilder())
	var err error
	b.PriorityArray, err = builder.Build()
	if err != nil {
		if b.err == nil {
			b.err = &utils.MultiError{MainError: errors.New("sub builder failed")}
		}
		b.err.Append(errors.Wrap(err, "OptionalPropertyBuilder failed"))
	}
	return b
}

func (b *_OctetStringValueBuilder) WithRelinquishDefault(relinquishDefault OptionalProperty) OctetStringValueBuilder {
	b.RelinquishDefault = relinquishDefault
	return b
}

func (b *_OctetStringValueBuilder) WithRelinquishDefaultBuilder(builderSupplier func(OptionalPropertyBuilder) OptionalPropertyBuilder) OctetStringValueBuilder {
	builder := builderSupplier(b.RelinquishDefault.CreateOptionalPropertyBuilder())
	var err error
	b.RelinquishDefault, err = builder.Build()
	if err != nil {
		if b.err == nil {
			b.err = &utils.MultiError{MainError: errors.New("sub builder failed")}
		}
		b.err.Append(errors.Wrap(err, "OptionalPropertyBuilder failed"))
	}
	return b
}

func (b *_OctetStringValueBuilder) WithReliabilityEvaluationInhibit(reliabilityEvaluationInhibit OptionalProperty) OctetStringValueBuilder {
	b.ReliabilityEvaluationInhibit = reliabilityEvaluationInhibit
	return b
}

func (b *_OctetStringValueBuilder) WithReliabilityEvaluationInhibitBuilder(builderSupplier func(OptionalPropertyBuilder) OptionalPropertyBuilder) OctetStringValueBuilder {
	builder := builderSupplier(b.ReliabilityEvaluationInhibit.CreateOptionalPropertyBuilder())
	var err error
	b.ReliabilityEvaluationInhibit, err = builder.Build()
	if err != nil {
		if b.err == nil {
			b.err = &utils.MultiError{MainError: errors.New("sub builder failed")}
		}
		b.err.Append(errors.Wrap(err, "OptionalPropertyBuilder failed"))
	}
	return b
}

func (b *_OctetStringValueBuilder) WithPropertyList(propertyList ReadableProperty) OctetStringValueBuilder {
	b.PropertyList = propertyList
	return b
}

func (b *_OctetStringValueBuilder) WithPropertyListBuilder(builderSupplier func(ReadablePropertyBuilder) ReadablePropertyBuilder) OctetStringValueBuilder {
	builder := builderSupplier(b.PropertyList.CreateReadablePropertyBuilder())
	var err error
	b.PropertyList, err = builder.Build()
	if err != nil {
		if b.err == nil {
			b.err = &utils.MultiError{MainError: errors.New("sub builder failed")}
		}
		b.err.Append(errors.Wrap(err, "ReadablePropertyBuilder failed"))
	}
	return b
}

func (b *_OctetStringValueBuilder) WithCurrentCommandPriority(currentCommandPriority OptionalProperty) OctetStringValueBuilder {
	b.CurrentCommandPriority = currentCommandPriority
	return b
}

func (b *_OctetStringValueBuilder) WithCurrentCommandPriorityBuilder(builderSupplier func(OptionalPropertyBuilder) OptionalPropertyBuilder) OctetStringValueBuilder {
	builder := builderSupplier(b.CurrentCommandPriority.CreateOptionalPropertyBuilder())
	var err error
	b.CurrentCommandPriority, err = builder.Build()
	if err != nil {
		if b.err == nil {
			b.err = &utils.MultiError{MainError: errors.New("sub builder failed")}
		}
		b.err.Append(errors.Wrap(err, "OptionalPropertyBuilder failed"))
	}
	return b
}

func (b *_OctetStringValueBuilder) WithValueSource(valueSource OptionalProperty) OctetStringValueBuilder {
	b.ValueSource = valueSource
	return b
}

func (b *_OctetStringValueBuilder) WithValueSourceBuilder(builderSupplier func(OptionalPropertyBuilder) OptionalPropertyBuilder) OctetStringValueBuilder {
	builder := builderSupplier(b.ValueSource.CreateOptionalPropertyBuilder())
	var err error
	b.ValueSource, err = builder.Build()
	if err != nil {
		if b.err == nil {
			b.err = &utils.MultiError{MainError: errors.New("sub builder failed")}
		}
		b.err.Append(errors.Wrap(err, "OptionalPropertyBuilder failed"))
	}
	return b
}

func (b *_OctetStringValueBuilder) WithValueSourceArray(valueSourceArray OptionalProperty) OctetStringValueBuilder {
	b.ValueSourceArray = valueSourceArray
	return b
}

func (b *_OctetStringValueBuilder) WithValueSourceArrayBuilder(builderSupplier func(OptionalPropertyBuilder) OptionalPropertyBuilder) OctetStringValueBuilder {
	builder := builderSupplier(b.ValueSourceArray.CreateOptionalPropertyBuilder())
	var err error
	b.ValueSourceArray, err = builder.Build()
	if err != nil {
		if b.err == nil {
			b.err = &utils.MultiError{MainError: errors.New("sub builder failed")}
		}
		b.err.Append(errors.Wrap(err, "OptionalPropertyBuilder failed"))
	}
	return b
}

func (b *_OctetStringValueBuilder) WithLastCommandTime(lastCommandTime OptionalProperty) OctetStringValueBuilder {
	b.LastCommandTime = lastCommandTime
	return b
}

func (b *_OctetStringValueBuilder) WithLastCommandTimeBuilder(builderSupplier func(OptionalPropertyBuilder) OptionalPropertyBuilder) OctetStringValueBuilder {
	builder := builderSupplier(b.LastCommandTime.CreateOptionalPropertyBuilder())
	var err error
	b.LastCommandTime, err = builder.Build()
	if err != nil {
		if b.err == nil {
			b.err = &utils.MultiError{MainError: errors.New("sub builder failed")}
		}
		b.err.Append(errors.Wrap(err, "OptionalPropertyBuilder failed"))
	}
	return b
}

func (b *_OctetStringValueBuilder) WithCommandTimeArray(commandTimeArray OptionalProperty) OctetStringValueBuilder {
	b.CommandTimeArray = commandTimeArray
	return b
}

func (b *_OctetStringValueBuilder) WithCommandTimeArrayBuilder(builderSupplier func(OptionalPropertyBuilder) OptionalPropertyBuilder) OctetStringValueBuilder {
	builder := builderSupplier(b.CommandTimeArray.CreateOptionalPropertyBuilder())
	var err error
	b.CommandTimeArray, err = builder.Build()
	if err != nil {
		if b.err == nil {
			b.err = &utils.MultiError{MainError: errors.New("sub builder failed")}
		}
		b.err.Append(errors.Wrap(err, "OptionalPropertyBuilder failed"))
	}
	return b
}

func (b *_OctetStringValueBuilder) WithTags(tags OptionalProperty) OctetStringValueBuilder {
	b.Tags = tags
	return b
}

func (b *_OctetStringValueBuilder) WithTagsBuilder(builderSupplier func(OptionalPropertyBuilder) OptionalPropertyBuilder) OctetStringValueBuilder {
	builder := builderSupplier(b.Tags.CreateOptionalPropertyBuilder())
	var err error
	b.Tags, err = builder.Build()
	if err != nil {
		if b.err == nil {
			b.err = &utils.MultiError{MainError: errors.New("sub builder failed")}
		}
		b.err.Append(errors.Wrap(err, "OptionalPropertyBuilder failed"))
	}
	return b
}

func (b *_OctetStringValueBuilder) WithProfileLocation(profileLocation OptionalProperty) OctetStringValueBuilder {
	b.ProfileLocation = profileLocation
	return b
}

func (b *_OctetStringValueBuilder) WithProfileLocationBuilder(builderSupplier func(OptionalPropertyBuilder) OptionalPropertyBuilder) OctetStringValueBuilder {
	builder := builderSupplier(b.ProfileLocation.CreateOptionalPropertyBuilder())
	var err error
	b.ProfileLocation, err = builder.Build()
	if err != nil {
		if b.err == nil {
			b.err = &utils.MultiError{MainError: errors.New("sub builder failed")}
		}
		b.err.Append(errors.Wrap(err, "OptionalPropertyBuilder failed"))
	}
	return b
}

func (b *_OctetStringValueBuilder) WithProfileName(profileName OptionalProperty) OctetStringValueBuilder {
	b.ProfileName = profileName
	return b
}

func (b *_OctetStringValueBuilder) WithProfileNameBuilder(builderSupplier func(OptionalPropertyBuilder) OptionalPropertyBuilder) OctetStringValueBuilder {
	builder := builderSupplier(b.ProfileName.CreateOptionalPropertyBuilder())
	var err error
	b.ProfileName, err = builder.Build()
	if err != nil {
		if b.err == nil {
			b.err = &utils.MultiError{MainError: errors.New("sub builder failed")}
		}
		b.err.Append(errors.Wrap(err, "OptionalPropertyBuilder failed"))
	}
	return b
}

func (b *_OctetStringValueBuilder) Build() (OctetStringValue, error) {
	if b.ObjectIdentifier == nil {
		if b.err == nil {
			b.err = new(utils.MultiError)
		}
		b.err.Append(errors.New("mandatory field 'objectIdentifier' not set"))
	}
	if b.ObjectName == nil {
		if b.err == nil {
			b.err = new(utils.MultiError)
		}
		b.err.Append(errors.New("mandatory field 'objectName' not set"))
	}
	if b.ObjectType == nil {
		if b.err == nil {
			b.err = new(utils.MultiError)
		}
		b.err.Append(errors.New("mandatory field 'objectType' not set"))
	}
	if b.Description == nil {
		if b.err == nil {
			b.err = new(utils.MultiError)
		}
		b.err.Append(errors.New("mandatory field 'description' not set"))
	}
	if b.PresentValue == nil {
		if b.err == nil {
			b.err = new(utils.MultiError)
		}
		b.err.Append(errors.New("mandatory field 'presentValue' not set"))
	}
	if b.StatusFlags == nil {
		if b.err == nil {
			b.err = new(utils.MultiError)
		}
		b.err.Append(errors.New("mandatory field 'statusFlags' not set"))
	}
	if b.EventState == nil {
		if b.err == nil {
			b.err = new(utils.MultiError)
		}
		b.err.Append(errors.New("mandatory field 'eventState' not set"))
	}
	if b.Reliability == nil {
		if b.err == nil {
			b.err = new(utils.MultiError)
		}
		b.err.Append(errors.New("mandatory field 'reliability' not set"))
	}
	if b.OutOfService == nil {
		if b.err == nil {
			b.err = new(utils.MultiError)
		}
		b.err.Append(errors.New("mandatory field 'outOfService' not set"))
	}
	if b.PriorityArray == nil {
		if b.err == nil {
			b.err = new(utils.MultiError)
		}
		b.err.Append(errors.New("mandatory field 'priorityArray' not set"))
	}
	if b.RelinquishDefault == nil {
		if b.err == nil {
			b.err = new(utils.MultiError)
		}
		b.err.Append(errors.New("mandatory field 'relinquishDefault' not set"))
	}
	if b.ReliabilityEvaluationInhibit == nil {
		if b.err == nil {
			b.err = new(utils.MultiError)
		}
		b.err.Append(errors.New("mandatory field 'reliabilityEvaluationInhibit' not set"))
	}
	if b.PropertyList == nil {
		if b.err == nil {
			b.err = new(utils.MultiError)
		}
		b.err.Append(errors.New("mandatory field 'propertyList' not set"))
	}
	if b.CurrentCommandPriority == nil {
		if b.err == nil {
			b.err = new(utils.MultiError)
		}
		b.err.Append(errors.New("mandatory field 'currentCommandPriority' not set"))
	}
	if b.ValueSource == nil {
		if b.err == nil {
			b.err = new(utils.MultiError)
		}
		b.err.Append(errors.New("mandatory field 'valueSource' not set"))
	}
	if b.ValueSourceArray == nil {
		if b.err == nil {
			b.err = new(utils.MultiError)
		}
		b.err.Append(errors.New("mandatory field 'valueSourceArray' not set"))
	}
	if b.LastCommandTime == nil {
		if b.err == nil {
			b.err = new(utils.MultiError)
		}
		b.err.Append(errors.New("mandatory field 'lastCommandTime' not set"))
	}
	if b.CommandTimeArray == nil {
		if b.err == nil {
			b.err = new(utils.MultiError)
		}
		b.err.Append(errors.New("mandatory field 'commandTimeArray' not set"))
	}
	if b.Tags == nil {
		if b.err == nil {
			b.err = new(utils.MultiError)
		}
		b.err.Append(errors.New("mandatory field 'tags' not set"))
	}
	if b.ProfileLocation == nil {
		if b.err == nil {
			b.err = new(utils.MultiError)
		}
		b.err.Append(errors.New("mandatory field 'profileLocation' not set"))
	}
	if b.ProfileName == nil {
		if b.err == nil {
			b.err = new(utils.MultiError)
		}
		b.err.Append(errors.New("mandatory field 'profileName' not set"))
	}
	if b.err != nil {
		return nil, errors.Wrap(b.err, "error occurred during build")
	}
	return b._OctetStringValue.deepCopy(), nil
}

func (b *_OctetStringValueBuilder) MustBuild() OctetStringValue {
	build, err := b.Build()
	if err != nil {
		panic(err)
	}
	return build
}

func (b *_OctetStringValueBuilder) DeepCopy() any {
	_copy := b.CreateOctetStringValueBuilder().(*_OctetStringValueBuilder)
	if b.err != nil {
		_copy.err = b.err.DeepCopy().(*utils.MultiError)
	}
	return _copy
}

// CreateOctetStringValueBuilder creates a OctetStringValueBuilder
func (b *_OctetStringValue) CreateOctetStringValueBuilder() OctetStringValueBuilder {
	if b == nil {
		return NewOctetStringValueBuilder()
	}
	return &_OctetStringValueBuilder{_OctetStringValue: b.deepCopy()}
}

///////////////////////
///////////////////////
///////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////
/////////////////////// Accessors for property fields.
///////////////////////

func (m *_OctetStringValue) GetObjectIdentifier() ReadableProperty {
	return m.ObjectIdentifier
}

func (m *_OctetStringValue) GetObjectName() ReadableProperty {
	return m.ObjectName
}

func (m *_OctetStringValue) GetObjectType() ReadableProperty {
	return m.ObjectType
}

func (m *_OctetStringValue) GetDescription() OptionalProperty {
	return m.Description
}

func (m *_OctetStringValue) GetPresentValue() ReadableProperty {
	return m.PresentValue
}

func (m *_OctetStringValue) GetStatusFlags() ReadableProperty {
	return m.StatusFlags
}

func (m *_OctetStringValue) GetEventState() OptionalProperty {
	return m.EventState
}

func (m *_OctetStringValue) GetReliability() OptionalProperty {
	return m.Reliability
}

func (m *_OctetStringValue) GetOutOfService() OptionalProperty {
	return m.OutOfService
}

func (m *_OctetStringValue) GetPriorityArray() OptionalProperty {
	return m.PriorityArray
}

func (m *_OctetStringValue) GetRelinquishDefault() OptionalProperty {
	return m.RelinquishDefault
}

func (m *_OctetStringValue) GetReliabilityEvaluationInhibit() OptionalProperty {
	return m.ReliabilityEvaluationInhibit
}

func (m *_OctetStringValue) GetPropertyList() ReadableProperty {
	return m.PropertyList
}

func (m *_OctetStringValue) GetCurrentCommandPriority() OptionalProperty {
	return m.CurrentCommandPriority
}

func (m *_OctetStringValue) GetValueSource() OptionalProperty {
	return m.ValueSource
}

func (m *_OctetStringValue) GetValueSourceArray() OptionalProperty {
	return m.ValueSourceArray
}

func (m *_OctetStringValue) GetLastCommandTime() OptionalProperty {
	return m.LastCommandTime
}

func (m *_OctetStringValue) GetCommandTimeArray() OptionalProperty {
	return m.CommandTimeArray
}

func (m *_OctetStringValue) GetTags() OptionalProperty {
	return m.Tags
}

func (m *_OctetStringValue) GetProfileLocation() OptionalProperty {
	return m.ProfileLocation
}

func (m *_OctetStringValue) GetProfileName() OptionalProperty {
	return m.ProfileName
}

///////////////////////
///////////////////////
///////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////

// Deprecated: use the interface for direct cast
func CastOctetStringValue(structType any) OctetStringValue {
	if casted, ok := structType.(OctetStringValue); ok {
		return casted
	}
	if casted, ok := structType.(*OctetStringValue); ok {
		return *casted
	}
	return nil
}

func (m *_OctetStringValue) GetTypeName() string {
	return "OctetStringValue"
}

func (m *_OctetStringValue) GetLengthInBits(ctx context.Context) uint16 {
	lengthInBits := uint16(0)

	// Simple field (objectIdentifier)
	lengthInBits += m.ObjectIdentifier.GetLengthInBits(ctx)

	// Simple field (objectName)
	lengthInBits += m.ObjectName.GetLengthInBits(ctx)

	// Simple field (objectType)
	lengthInBits += m.ObjectType.GetLengthInBits(ctx)

	// Simple field (description)
	lengthInBits += m.Description.GetLengthInBits(ctx)

	// Simple field (presentValue)
	lengthInBits += m.PresentValue.GetLengthInBits(ctx)

	// Simple field (statusFlags)
	lengthInBits += m.StatusFlags.GetLengthInBits(ctx)

	// Simple field (eventState)
	lengthInBits += m.EventState.GetLengthInBits(ctx)

	// Simple field (reliability)
	lengthInBits += m.Reliability.GetLengthInBits(ctx)

	// Simple field (outOfService)
	lengthInBits += m.OutOfService.GetLengthInBits(ctx)

	// Simple field (priorityArray)
	lengthInBits += m.PriorityArray.GetLengthInBits(ctx)

	// Simple field (relinquishDefault)
	lengthInBits += m.RelinquishDefault.GetLengthInBits(ctx)

	// Simple field (reliabilityEvaluationInhibit)
	lengthInBits += m.ReliabilityEvaluationInhibit.GetLengthInBits(ctx)

	// Simple field (propertyList)
	lengthInBits += m.PropertyList.GetLengthInBits(ctx)

	// Simple field (currentCommandPriority)
	lengthInBits += m.CurrentCommandPriority.GetLengthInBits(ctx)

	// Simple field (valueSource)
	lengthInBits += m.ValueSource.GetLengthInBits(ctx)

	// Simple field (valueSourceArray)
	lengthInBits += m.ValueSourceArray.GetLengthInBits(ctx)

	// Simple field (lastCommandTime)
	lengthInBits += m.LastCommandTime.GetLengthInBits(ctx)

	// Simple field (commandTimeArray)
	lengthInBits += m.CommandTimeArray.GetLengthInBits(ctx)

	// Simple field (tags)
	lengthInBits += m.Tags.GetLengthInBits(ctx)

	// Simple field (profileLocation)
	lengthInBits += m.ProfileLocation.GetLengthInBits(ctx)

	// Simple field (profileName)
	lengthInBits += m.ProfileName.GetLengthInBits(ctx)

	return lengthInBits
}

func (m *_OctetStringValue) GetLengthInBytes(ctx context.Context) uint16 {
	return m.GetLengthInBits(ctx) / 8
}

func OctetStringValueParse(ctx context.Context, theBytes []byte) (OctetStringValue, error) {
	return OctetStringValueParseWithBuffer(ctx, utils.NewReadBufferByteBased(theBytes))
}

func OctetStringValueParseWithBufferProducer() func(ctx context.Context, readBuffer utils.ReadBuffer) (OctetStringValue, error) {
	return func(ctx context.Context, readBuffer utils.ReadBuffer) (OctetStringValue, error) {
		return OctetStringValueParseWithBuffer(ctx, readBuffer)
	}
}

func OctetStringValueParseWithBuffer(ctx context.Context, readBuffer utils.ReadBuffer) (OctetStringValue, error) {
	v, err := (&_OctetStringValue{}).parse(ctx, readBuffer)
	if err != nil {
		return nil, err
	}
	return v, nil
}

func (m *_OctetStringValue) parse(ctx context.Context, readBuffer utils.ReadBuffer) (__octetStringValue OctetStringValue, err error) {
	positionAware := readBuffer
	_ = positionAware
	if pullErr := readBuffer.PullContext("OctetStringValue"); pullErr != nil {
		return nil, errors.Wrap(pullErr, "Error pulling for OctetStringValue")
	}
	currentPos := positionAware.GetPos()
	_ = currentPos

	objectIdentifier, err := ReadSimpleField[ReadableProperty](ctx, "objectIdentifier", ReadComplex[ReadableProperty](ReadablePropertyParseWithBufferProducer((string)("BACnetObjectIdentifier")), readBuffer))
	if err != nil {
		return nil, errors.Wrap(err, fmt.Sprintf("Error parsing 'objectIdentifier' field"))
	}
	m.ObjectIdentifier = objectIdentifier

	objectName, err := ReadSimpleField[ReadableProperty](ctx, "objectName", ReadComplex[ReadableProperty](ReadablePropertyParseWithBufferProducer((string)("CharacterString")), readBuffer))
	if err != nil {
		return nil, errors.Wrap(err, fmt.Sprintf("Error parsing 'objectName' field"))
	}
	m.ObjectName = objectName

	objectType, err := ReadSimpleField[ReadableProperty](ctx, "objectType", ReadComplex[ReadableProperty](ReadablePropertyParseWithBufferProducer((string)("BACnetObjectType")), readBuffer))
	if err != nil {
		return nil, errors.Wrap(err, fmt.Sprintf("Error parsing 'objectType' field"))
	}
	m.ObjectType = objectType

	description, err := ReadSimpleField[OptionalProperty](ctx, "description", ReadComplex[OptionalProperty](OptionalPropertyParseWithBufferProducer((string)("CharacterString")), readBuffer))
	if err != nil {
		return nil, errors.Wrap(err, fmt.Sprintf("Error parsing 'description' field"))
	}
	m.Description = description

	presentValue, err := ReadSimpleField[ReadableProperty](ctx, "presentValue", ReadComplex[ReadableProperty](ReadablePropertyParseWithBufferProducer((string)("OCTET STRING")), readBuffer))
	if err != nil {
		return nil, errors.Wrap(err, fmt.Sprintf("Error parsing 'presentValue' field"))
	}
	m.PresentValue = presentValue

	statusFlags, err := ReadSimpleField[ReadableProperty](ctx, "statusFlags", ReadComplex[ReadableProperty](ReadablePropertyParseWithBufferProducer((string)("BACnetStatusFlags")), readBuffer))
	if err != nil {
		return nil, errors.Wrap(err, fmt.Sprintf("Error parsing 'statusFlags' field"))
	}
	m.StatusFlags = statusFlags

	eventState, err := ReadSimpleField[OptionalProperty](ctx, "eventState", ReadComplex[OptionalProperty](OptionalPropertyParseWithBufferProducer((string)("BACnetEventState")), readBuffer))
	if err != nil {
		return nil, errors.Wrap(err, fmt.Sprintf("Error parsing 'eventState' field"))
	}
	m.EventState = eventState

	reliability, err := ReadSimpleField[OptionalProperty](ctx, "reliability", ReadComplex[OptionalProperty](OptionalPropertyParseWithBufferProducer((string)("BACnetReliability")), readBuffer))
	if err != nil {
		return nil, errors.Wrap(err, fmt.Sprintf("Error parsing 'reliability' field"))
	}
	m.Reliability = reliability

	outOfService, err := ReadSimpleField[OptionalProperty](ctx, "outOfService", ReadComplex[OptionalProperty](OptionalPropertyParseWithBufferProducer((string)("BOOLEAN")), readBuffer))
	if err != nil {
		return nil, errors.Wrap(err, fmt.Sprintf("Error parsing 'outOfService' field"))
	}
	m.OutOfService = outOfService

	priorityArray, err := ReadSimpleField[OptionalProperty](ctx, "priorityArray", ReadComplex[OptionalProperty](OptionalPropertyParseWithBufferProducer((string)("BACnetPriorityArray")), readBuffer))
	if err != nil {
		return nil, errors.Wrap(err, fmt.Sprintf("Error parsing 'priorityArray' field"))
	}
	m.PriorityArray = priorityArray

	relinquishDefault, err := ReadSimpleField[OptionalProperty](ctx, "relinquishDefault", ReadComplex[OptionalProperty](OptionalPropertyParseWithBufferProducer((string)("OCTET STRING")), readBuffer))
	if err != nil {
		return nil, errors.Wrap(err, fmt.Sprintf("Error parsing 'relinquishDefault' field"))
	}
	m.RelinquishDefault = relinquishDefault

	reliabilityEvaluationInhibit, err := ReadSimpleField[OptionalProperty](ctx, "reliabilityEvaluationInhibit", ReadComplex[OptionalProperty](OptionalPropertyParseWithBufferProducer((string)("BOOLEAN")), readBuffer))
	if err != nil {
		return nil, errors.Wrap(err, fmt.Sprintf("Error parsing 'reliabilityEvaluationInhibit' field"))
	}
	m.ReliabilityEvaluationInhibit = reliabilityEvaluationInhibit

	propertyList, err := ReadSimpleField[ReadableProperty](ctx, "propertyList", ReadComplex[ReadableProperty](ReadablePropertyParseWithBufferProducer((string)("BACnetARRAY[N] of BACnetPropertyIdentifier")), readBuffer))
	if err != nil {
		return nil, errors.Wrap(err, fmt.Sprintf("Error parsing 'propertyList' field"))
	}
	m.PropertyList = propertyList

	currentCommandPriority, err := ReadSimpleField[OptionalProperty](ctx, "currentCommandPriority", ReadComplex[OptionalProperty](OptionalPropertyParseWithBufferProducer((string)("BACnetOptionalUnsigned")), readBuffer))
	if err != nil {
		return nil, errors.Wrap(err, fmt.Sprintf("Error parsing 'currentCommandPriority' field"))
	}
	m.CurrentCommandPriority = currentCommandPriority

	valueSource, err := ReadSimpleField[OptionalProperty](ctx, "valueSource", ReadComplex[OptionalProperty](OptionalPropertyParseWithBufferProducer((string)("BACnetValueSource")), readBuffer))
	if err != nil {
		return nil, errors.Wrap(err, fmt.Sprintf("Error parsing 'valueSource' field"))
	}
	m.ValueSource = valueSource

	valueSourceArray, err := ReadSimpleField[OptionalProperty](ctx, "valueSourceArray", ReadComplex[OptionalProperty](OptionalPropertyParseWithBufferProducer((string)("BACnetARRAY[16] of BACnetValueSource")), readBuffer))
	if err != nil {
		return nil, errors.Wrap(err, fmt.Sprintf("Error parsing 'valueSourceArray' field"))
	}
	m.ValueSourceArray = valueSourceArray

	lastCommandTime, err := ReadSimpleField[OptionalProperty](ctx, "lastCommandTime", ReadComplex[OptionalProperty](OptionalPropertyParseWithBufferProducer((string)("BACnetTimeStamp")), readBuffer))
	if err != nil {
		return nil, errors.Wrap(err, fmt.Sprintf("Error parsing 'lastCommandTime' field"))
	}
	m.LastCommandTime = lastCommandTime

	commandTimeArray, err := ReadSimpleField[OptionalProperty](ctx, "commandTimeArray", ReadComplex[OptionalProperty](OptionalPropertyParseWithBufferProducer((string)("BACnetARRAY[16] of BACnetTimeStamp")), readBuffer))
	if err != nil {
		return nil, errors.Wrap(err, fmt.Sprintf("Error parsing 'commandTimeArray' field"))
	}
	m.CommandTimeArray = commandTimeArray

	tags, err := ReadSimpleField[OptionalProperty](ctx, "tags", ReadComplex[OptionalProperty](OptionalPropertyParseWithBufferProducer((string)("BACnetARRAY[N] of BACnetNameValue")), readBuffer))
	if err != nil {
		return nil, errors.Wrap(err, fmt.Sprintf("Error parsing 'tags' field"))
	}
	m.Tags = tags

	profileLocation, err := ReadSimpleField[OptionalProperty](ctx, "profileLocation", ReadComplex[OptionalProperty](OptionalPropertyParseWithBufferProducer((string)("CharacterString")), readBuffer))
	if err != nil {
		return nil, errors.Wrap(err, fmt.Sprintf("Error parsing 'profileLocation' field"))
	}
	m.ProfileLocation = profileLocation

	profileName, err := ReadSimpleField[OptionalProperty](ctx, "profileName", ReadComplex[OptionalProperty](OptionalPropertyParseWithBufferProducer((string)("CharacterString")), readBuffer))
	if err != nil {
		return nil, errors.Wrap(err, fmt.Sprintf("Error parsing 'profileName' field"))
	}
	m.ProfileName = profileName

	if closeErr := readBuffer.CloseContext("OctetStringValue"); closeErr != nil {
		return nil, errors.Wrap(closeErr, "Error closing for OctetStringValue")
	}

	return m, nil
}

func (m *_OctetStringValue) Serialize() ([]byte, error) {
	wb := utils.NewWriteBufferByteBased(utils.WithInitialSizeForByteBasedBuffer(int(m.GetLengthInBytes(context.Background()))))
	if err := m.SerializeWithWriteBuffer(context.Background(), wb); err != nil {
		return nil, err
	}
	return wb.GetBytes(), nil
}

func (m *_OctetStringValue) SerializeWithWriteBuffer(ctx context.Context, writeBuffer utils.WriteBuffer) error {
	positionAware := writeBuffer
	_ = positionAware
	log := zerolog.Ctx(ctx)
	_ = log
	if pushErr := writeBuffer.PushContext("OctetStringValue"); pushErr != nil {
		return errors.Wrap(pushErr, "Error pushing for OctetStringValue")
	}

	if err := WriteSimpleField[ReadableProperty](ctx, "objectIdentifier", m.GetObjectIdentifier(), WriteComplex[ReadableProperty](writeBuffer)); err != nil {
		return errors.Wrap(err, "Error serializing 'objectIdentifier' field")
	}

	if err := WriteSimpleField[ReadableProperty](ctx, "objectName", m.GetObjectName(), WriteComplex[ReadableProperty](writeBuffer)); err != nil {
		return errors.Wrap(err, "Error serializing 'objectName' field")
	}

	if err := WriteSimpleField[ReadableProperty](ctx, "objectType", m.GetObjectType(), WriteComplex[ReadableProperty](writeBuffer)); err != nil {
		return errors.Wrap(err, "Error serializing 'objectType' field")
	}

	if err := WriteSimpleField[OptionalProperty](ctx, "description", m.GetDescription(), WriteComplex[OptionalProperty](writeBuffer)); err != nil {
		return errors.Wrap(err, "Error serializing 'description' field")
	}

	if err := WriteSimpleField[ReadableProperty](ctx, "presentValue", m.GetPresentValue(), WriteComplex[ReadableProperty](writeBuffer)); err != nil {
		return errors.Wrap(err, "Error serializing 'presentValue' field")
	}

	if err := WriteSimpleField[ReadableProperty](ctx, "statusFlags", m.GetStatusFlags(), WriteComplex[ReadableProperty](writeBuffer)); err != nil {
		return errors.Wrap(err, "Error serializing 'statusFlags' field")
	}

	if err := WriteSimpleField[OptionalProperty](ctx, "eventState", m.GetEventState(), WriteComplex[OptionalProperty](writeBuffer)); err != nil {
		return errors.Wrap(err, "Error serializing 'eventState' field")
	}

	if err := WriteSimpleField[OptionalProperty](ctx, "reliability", m.GetReliability(), WriteComplex[OptionalProperty](writeBuffer)); err != nil {
		return errors.Wrap(err, "Error serializing 'reliability' field")
	}

	if err := WriteSimpleField[OptionalProperty](ctx, "outOfService", m.GetOutOfService(), WriteComplex[OptionalProperty](writeBuffer)); err != nil {
		return errors.Wrap(err, "Error serializing 'outOfService' field")
	}

	if err := WriteSimpleField[OptionalProperty](ctx, "priorityArray", m.GetPriorityArray(), WriteComplex[OptionalProperty](writeBuffer)); err != nil {
		return errors.Wrap(err, "Error serializing 'priorityArray' field")
	}

	if err := WriteSimpleField[OptionalProperty](ctx, "relinquishDefault", m.GetRelinquishDefault(), WriteComplex[OptionalProperty](writeBuffer)); err != nil {
		return errors.Wrap(err, "Error serializing 'relinquishDefault' field")
	}

	if err := WriteSimpleField[OptionalProperty](ctx, "reliabilityEvaluationInhibit", m.GetReliabilityEvaluationInhibit(), WriteComplex[OptionalProperty](writeBuffer)); err != nil {
		return errors.Wrap(err, "Error serializing 'reliabilityEvaluationInhibit' field")
	}

	if err := WriteSimpleField[ReadableProperty](ctx, "propertyList", m.GetPropertyList(), WriteComplex[ReadableProperty](writeBuffer)); err != nil {
		return errors.Wrap(err, "Error serializing 'propertyList' field")
	}

	if err := WriteSimpleField[OptionalProperty](ctx, "currentCommandPriority", m.GetCurrentCommandPriority(), WriteComplex[OptionalProperty](writeBuffer)); err != nil {
		return errors.Wrap(err, "Error serializing 'currentCommandPriority' field")
	}

	if err := WriteSimpleField[OptionalProperty](ctx, "valueSource", m.GetValueSource(), WriteComplex[OptionalProperty](writeBuffer)); err != nil {
		return errors.Wrap(err, "Error serializing 'valueSource' field")
	}

	if err := WriteSimpleField[OptionalProperty](ctx, "valueSourceArray", m.GetValueSourceArray(), WriteComplex[OptionalProperty](writeBuffer)); err != nil {
		return errors.Wrap(err, "Error serializing 'valueSourceArray' field")
	}

	if err := WriteSimpleField[OptionalProperty](ctx, "lastCommandTime", m.GetLastCommandTime(), WriteComplex[OptionalProperty](writeBuffer)); err != nil {
		return errors.Wrap(err, "Error serializing 'lastCommandTime' field")
	}

	if err := WriteSimpleField[OptionalProperty](ctx, "commandTimeArray", m.GetCommandTimeArray(), WriteComplex[OptionalProperty](writeBuffer)); err != nil {
		return errors.Wrap(err, "Error serializing 'commandTimeArray' field")
	}

	if err := WriteSimpleField[OptionalProperty](ctx, "tags", m.GetTags(), WriteComplex[OptionalProperty](writeBuffer)); err != nil {
		return errors.Wrap(err, "Error serializing 'tags' field")
	}

	if err := WriteSimpleField[OptionalProperty](ctx, "profileLocation", m.GetProfileLocation(), WriteComplex[OptionalProperty](writeBuffer)); err != nil {
		return errors.Wrap(err, "Error serializing 'profileLocation' field")
	}

	if err := WriteSimpleField[OptionalProperty](ctx, "profileName", m.GetProfileName(), WriteComplex[OptionalProperty](writeBuffer)); err != nil {
		return errors.Wrap(err, "Error serializing 'profileName' field")
	}

	if popErr := writeBuffer.PopContext("OctetStringValue"); popErr != nil {
		return errors.Wrap(popErr, "Error popping for OctetStringValue")
	}
	return nil
}

func (m *_OctetStringValue) IsOctetStringValue() {}

func (m *_OctetStringValue) DeepCopy() any {
	return m.deepCopy()
}

func (m *_OctetStringValue) deepCopy() *_OctetStringValue {
	if m == nil {
		return nil
	}
	_OctetStringValueCopy := &_OctetStringValue{
		m.ObjectIdentifier.DeepCopy().(ReadableProperty),
		m.ObjectName.DeepCopy().(ReadableProperty),
		m.ObjectType.DeepCopy().(ReadableProperty),
		m.Description.DeepCopy().(OptionalProperty),
		m.PresentValue.DeepCopy().(ReadableProperty),
		m.StatusFlags.DeepCopy().(ReadableProperty),
		m.EventState.DeepCopy().(OptionalProperty),
		m.Reliability.DeepCopy().(OptionalProperty),
		m.OutOfService.DeepCopy().(OptionalProperty),
		m.PriorityArray.DeepCopy().(OptionalProperty),
		m.RelinquishDefault.DeepCopy().(OptionalProperty),
		m.ReliabilityEvaluationInhibit.DeepCopy().(OptionalProperty),
		m.PropertyList.DeepCopy().(ReadableProperty),
		m.CurrentCommandPriority.DeepCopy().(OptionalProperty),
		m.ValueSource.DeepCopy().(OptionalProperty),
		m.ValueSourceArray.DeepCopy().(OptionalProperty),
		m.LastCommandTime.DeepCopy().(OptionalProperty),
		m.CommandTimeArray.DeepCopy().(OptionalProperty),
		m.Tags.DeepCopy().(OptionalProperty),
		m.ProfileLocation.DeepCopy().(OptionalProperty),
		m.ProfileName.DeepCopy().(OptionalProperty),
	}
	return _OctetStringValueCopy
}

func (m *_OctetStringValue) String() string {
	if m == nil {
		return "<nil>"
	}
	wb := utils.NewWriteBufferBoxBased(
		utils.WithWriteBufferBoxBasedMergeSingleBoxes(),
		utils.WithWriteBufferBoxBasedOmitEmptyBoxes(),
		utils.WithWriteBufferBoxBasedPrintPosLengthFooter(),
	)
	if err := wb.WriteSerializable(context.Background(), m); err != nil {
		return err.Error()
	}
	return wb.GetBox().String()
}
