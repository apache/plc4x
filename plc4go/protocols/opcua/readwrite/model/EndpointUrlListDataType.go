/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package model

import (
	"context"
	"fmt"

	"github.com/pkg/errors"
	"github.com/rs/zerolog"

	. "github.com/apache/plc4x/plc4go/spi/codegen/fields"
	. "github.com/apache/plc4x/plc4go/spi/codegen/io"
	"github.com/apache/plc4x/plc4go/spi/utils"
)

// Code generated by code-generation. DO NOT EDIT.

// EndpointUrlListDataType is the corresponding interface of EndpointUrlListDataType
type EndpointUrlListDataType interface {
	fmt.Stringer
	utils.LengthAware
	utils.Serializable
	utils.Copyable
	ExtensionObjectDefinition
	// GetNoOfEndpointUrlList returns NoOfEndpointUrlList (property field)
	GetNoOfEndpointUrlList() int32
	// GetEndpointUrlList returns EndpointUrlList (property field)
	GetEndpointUrlList() []PascalString
	// IsEndpointUrlListDataType is a marker method to prevent unintentional type checks (interfaces of same signature)
	IsEndpointUrlListDataType()
	// CreateBuilder creates a EndpointUrlListDataTypeBuilder
	CreateEndpointUrlListDataTypeBuilder() EndpointUrlListDataTypeBuilder
}

// _EndpointUrlListDataType is the data-structure of this message
type _EndpointUrlListDataType struct {
	ExtensionObjectDefinitionContract
	NoOfEndpointUrlList int32
	EndpointUrlList     []PascalString
}

var _ EndpointUrlListDataType = (*_EndpointUrlListDataType)(nil)
var _ ExtensionObjectDefinitionRequirements = (*_EndpointUrlListDataType)(nil)

// NewEndpointUrlListDataType factory function for _EndpointUrlListDataType
func NewEndpointUrlListDataType(noOfEndpointUrlList int32, endpointUrlList []PascalString) *_EndpointUrlListDataType {
	_result := &_EndpointUrlListDataType{
		ExtensionObjectDefinitionContract: NewExtensionObjectDefinition(),
		NoOfEndpointUrlList:               noOfEndpointUrlList,
		EndpointUrlList:                   endpointUrlList,
	}
	_result.ExtensionObjectDefinitionContract.(*_ExtensionObjectDefinition)._SubType = _result
	return _result
}

///////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////
/////////////////////// Builder
///////////////////////

// EndpointUrlListDataTypeBuilder is a builder for EndpointUrlListDataType
type EndpointUrlListDataTypeBuilder interface {
	utils.Copyable
	// WithMandatoryFields adds all mandatory fields (convenience for using multiple builder calls)
	WithMandatoryFields(noOfEndpointUrlList int32, endpointUrlList []PascalString) EndpointUrlListDataTypeBuilder
	// WithNoOfEndpointUrlList adds NoOfEndpointUrlList (property field)
	WithNoOfEndpointUrlList(int32) EndpointUrlListDataTypeBuilder
	// WithEndpointUrlList adds EndpointUrlList (property field)
	WithEndpointUrlList(...PascalString) EndpointUrlListDataTypeBuilder
	// Build builds the EndpointUrlListDataType or returns an error if something is wrong
	Build() (EndpointUrlListDataType, error)
	// MustBuild does the same as Build but panics on error
	MustBuild() EndpointUrlListDataType
}

// NewEndpointUrlListDataTypeBuilder() creates a EndpointUrlListDataTypeBuilder
func NewEndpointUrlListDataTypeBuilder() EndpointUrlListDataTypeBuilder {
	return &_EndpointUrlListDataTypeBuilder{_EndpointUrlListDataType: new(_EndpointUrlListDataType)}
}

type _EndpointUrlListDataTypeBuilder struct {
	*_EndpointUrlListDataType

	err *utils.MultiError
}

var _ (EndpointUrlListDataTypeBuilder) = (*_EndpointUrlListDataTypeBuilder)(nil)

func (m *_EndpointUrlListDataTypeBuilder) WithMandatoryFields(noOfEndpointUrlList int32, endpointUrlList []PascalString) EndpointUrlListDataTypeBuilder {
	return m.WithNoOfEndpointUrlList(noOfEndpointUrlList).WithEndpointUrlList(endpointUrlList...)
}

func (m *_EndpointUrlListDataTypeBuilder) WithNoOfEndpointUrlList(noOfEndpointUrlList int32) EndpointUrlListDataTypeBuilder {
	m.NoOfEndpointUrlList = noOfEndpointUrlList
	return m
}

func (m *_EndpointUrlListDataTypeBuilder) WithEndpointUrlList(endpointUrlList ...PascalString) EndpointUrlListDataTypeBuilder {
	m.EndpointUrlList = endpointUrlList
	return m
}

func (m *_EndpointUrlListDataTypeBuilder) Build() (EndpointUrlListDataType, error) {
	if m.err != nil {
		return nil, errors.Wrap(m.err, "error occurred during build")
	}
	return m._EndpointUrlListDataType.deepCopy(), nil
}

func (m *_EndpointUrlListDataTypeBuilder) MustBuild() EndpointUrlListDataType {
	build, err := m.Build()
	if err != nil {
		panic(err)
	}
	return build
}

func (m *_EndpointUrlListDataTypeBuilder) DeepCopy() any {
	return m.CreateEndpointUrlListDataTypeBuilder()
}

// CreateEndpointUrlListDataTypeBuilder creates a EndpointUrlListDataTypeBuilder
func (m *_EndpointUrlListDataType) CreateEndpointUrlListDataTypeBuilder() EndpointUrlListDataTypeBuilder {
	if m == nil {
		return NewEndpointUrlListDataTypeBuilder()
	}
	return &_EndpointUrlListDataTypeBuilder{_EndpointUrlListDataType: m.deepCopy()}
}

///////////////////////
///////////////////////
///////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////
/////////////////////// Accessors for discriminator values.
///////////////////////

func (m *_EndpointUrlListDataType) GetIdentifier() string {
	return "11945"
}

///////////////////////
///////////////////////
///////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////

func (m *_EndpointUrlListDataType) GetParent() ExtensionObjectDefinitionContract {
	return m.ExtensionObjectDefinitionContract
}

///////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////
/////////////////////// Accessors for property fields.
///////////////////////

func (m *_EndpointUrlListDataType) GetNoOfEndpointUrlList() int32 {
	return m.NoOfEndpointUrlList
}

func (m *_EndpointUrlListDataType) GetEndpointUrlList() []PascalString {
	return m.EndpointUrlList
}

///////////////////////
///////////////////////
///////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////

// Deprecated: use the interface for direct cast
func CastEndpointUrlListDataType(structType any) EndpointUrlListDataType {
	if casted, ok := structType.(EndpointUrlListDataType); ok {
		return casted
	}
	if casted, ok := structType.(*EndpointUrlListDataType); ok {
		return *casted
	}
	return nil
}

func (m *_EndpointUrlListDataType) GetTypeName() string {
	return "EndpointUrlListDataType"
}

func (m *_EndpointUrlListDataType) GetLengthInBits(ctx context.Context) uint16 {
	lengthInBits := uint16(m.ExtensionObjectDefinitionContract.(*_ExtensionObjectDefinition).getLengthInBits(ctx))

	// Simple field (noOfEndpointUrlList)
	lengthInBits += 32

	// Array field
	if len(m.EndpointUrlList) > 0 {
		for _curItem, element := range m.EndpointUrlList {
			arrayCtx := utils.CreateArrayContext(ctx, len(m.EndpointUrlList), _curItem)
			_ = arrayCtx
			_ = _curItem
			lengthInBits += element.(interface{ GetLengthInBits(context.Context) uint16 }).GetLengthInBits(arrayCtx)
		}
	}

	return lengthInBits
}

func (m *_EndpointUrlListDataType) GetLengthInBytes(ctx context.Context) uint16 {
	return m.GetLengthInBits(ctx) / 8
}

func (m *_EndpointUrlListDataType) parse(ctx context.Context, readBuffer utils.ReadBuffer, parent *_ExtensionObjectDefinition, identifier string) (__endpointUrlListDataType EndpointUrlListDataType, err error) {
	m.ExtensionObjectDefinitionContract = parent
	parent._SubType = m
	positionAware := readBuffer
	_ = positionAware
	if pullErr := readBuffer.PullContext("EndpointUrlListDataType"); pullErr != nil {
		return nil, errors.Wrap(pullErr, "Error pulling for EndpointUrlListDataType")
	}
	currentPos := positionAware.GetPos()
	_ = currentPos

	noOfEndpointUrlList, err := ReadSimpleField(ctx, "noOfEndpointUrlList", ReadSignedInt(readBuffer, uint8(32)))
	if err != nil {
		return nil, errors.Wrap(err, fmt.Sprintf("Error parsing 'noOfEndpointUrlList' field"))
	}
	m.NoOfEndpointUrlList = noOfEndpointUrlList

	endpointUrlList, err := ReadCountArrayField[PascalString](ctx, "endpointUrlList", ReadComplex[PascalString](PascalStringParseWithBuffer, readBuffer), uint64(noOfEndpointUrlList))
	if err != nil {
		return nil, errors.Wrap(err, fmt.Sprintf("Error parsing 'endpointUrlList' field"))
	}
	m.EndpointUrlList = endpointUrlList

	if closeErr := readBuffer.CloseContext("EndpointUrlListDataType"); closeErr != nil {
		return nil, errors.Wrap(closeErr, "Error closing for EndpointUrlListDataType")
	}

	return m, nil
}

func (m *_EndpointUrlListDataType) Serialize() ([]byte, error) {
	wb := utils.NewWriteBufferByteBased(utils.WithInitialSizeForByteBasedBuffer(int(m.GetLengthInBytes(context.Background()))))
	if err := m.SerializeWithWriteBuffer(context.Background(), wb); err != nil {
		return nil, err
	}
	return wb.GetBytes(), nil
}

func (m *_EndpointUrlListDataType) SerializeWithWriteBuffer(ctx context.Context, writeBuffer utils.WriteBuffer) error {
	positionAware := writeBuffer
	_ = positionAware
	log := zerolog.Ctx(ctx)
	_ = log
	ser := func() error {
		if pushErr := writeBuffer.PushContext("EndpointUrlListDataType"); pushErr != nil {
			return errors.Wrap(pushErr, "Error pushing for EndpointUrlListDataType")
		}

		if err := WriteSimpleField[int32](ctx, "noOfEndpointUrlList", m.GetNoOfEndpointUrlList(), WriteSignedInt(writeBuffer, 32)); err != nil {
			return errors.Wrap(err, "Error serializing 'noOfEndpointUrlList' field")
		}

		if err := WriteComplexTypeArrayField(ctx, "endpointUrlList", m.GetEndpointUrlList(), writeBuffer); err != nil {
			return errors.Wrap(err, "Error serializing 'endpointUrlList' field")
		}

		if popErr := writeBuffer.PopContext("EndpointUrlListDataType"); popErr != nil {
			return errors.Wrap(popErr, "Error popping for EndpointUrlListDataType")
		}
		return nil
	}
	return m.ExtensionObjectDefinitionContract.(*_ExtensionObjectDefinition).serializeParent(ctx, writeBuffer, m, ser)
}

func (m *_EndpointUrlListDataType) IsEndpointUrlListDataType() {}

func (m *_EndpointUrlListDataType) DeepCopy() any {
	return m.deepCopy()
}

func (m *_EndpointUrlListDataType) deepCopy() *_EndpointUrlListDataType {
	if m == nil {
		return nil
	}
	_EndpointUrlListDataTypeCopy := &_EndpointUrlListDataType{
		m.ExtensionObjectDefinitionContract.(*_ExtensionObjectDefinition).deepCopy(),
		m.NoOfEndpointUrlList,
		utils.DeepCopySlice[PascalString, PascalString](m.EndpointUrlList),
	}
	m.ExtensionObjectDefinitionContract.(*_ExtensionObjectDefinition)._SubType = m
	return _EndpointUrlListDataTypeCopy
}

func (m *_EndpointUrlListDataType) String() string {
	if m == nil {
		return "<nil>"
	}
	writeBuffer := utils.NewWriteBufferBoxBasedWithOptions(true, true)
	if err := writeBuffer.WriteSerializable(context.Background(), m); err != nil {
		return err.Error()
	}
	return writeBuffer.GetBox().String()
}
