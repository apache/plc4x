/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package model

import (
	"context"
	"fmt"

	"github.com/pkg/errors"
	"github.com/rs/zerolog"

	. "github.com/apache/plc4x/plc4go/spi/codegen/fields"
	. "github.com/apache/plc4x/plc4go/spi/codegen/io"
	"github.com/apache/plc4x/plc4go/spi/utils"
)

// Code generated by code-generation. DO NOT EDIT.

// SetTriggeringResponse is the corresponding interface of SetTriggeringResponse
type SetTriggeringResponse interface {
	fmt.Stringer
	utils.LengthAware
	utils.Serializable
	utils.Copyable
	ExtensionObjectDefinition
	// GetResponseHeader returns ResponseHeader (property field)
	GetResponseHeader() ExtensionObjectDefinition
	// GetNoOfAddResults returns NoOfAddResults (property field)
	GetNoOfAddResults() int32
	// GetAddResults returns AddResults (property field)
	GetAddResults() []StatusCode
	// GetNoOfAddDiagnosticInfos returns NoOfAddDiagnosticInfos (property field)
	GetNoOfAddDiagnosticInfos() int32
	// GetAddDiagnosticInfos returns AddDiagnosticInfos (property field)
	GetAddDiagnosticInfos() []DiagnosticInfo
	// GetNoOfRemoveResults returns NoOfRemoveResults (property field)
	GetNoOfRemoveResults() int32
	// GetRemoveResults returns RemoveResults (property field)
	GetRemoveResults() []StatusCode
	// GetNoOfRemoveDiagnosticInfos returns NoOfRemoveDiagnosticInfos (property field)
	GetNoOfRemoveDiagnosticInfos() int32
	// GetRemoveDiagnosticInfos returns RemoveDiagnosticInfos (property field)
	GetRemoveDiagnosticInfos() []DiagnosticInfo
	// IsSetTriggeringResponse is a marker method to prevent unintentional type checks (interfaces of same signature)
	IsSetTriggeringResponse()
}

// _SetTriggeringResponse is the data-structure of this message
type _SetTriggeringResponse struct {
	ExtensionObjectDefinitionContract
	ResponseHeader            ExtensionObjectDefinition
	NoOfAddResults            int32
	AddResults                []StatusCode
	NoOfAddDiagnosticInfos    int32
	AddDiagnosticInfos        []DiagnosticInfo
	NoOfRemoveResults         int32
	RemoveResults             []StatusCode
	NoOfRemoveDiagnosticInfos int32
	RemoveDiagnosticInfos     []DiagnosticInfo
}

var _ SetTriggeringResponse = (*_SetTriggeringResponse)(nil)
var _ ExtensionObjectDefinitionRequirements = (*_SetTriggeringResponse)(nil)

// NewSetTriggeringResponse factory function for _SetTriggeringResponse
func NewSetTriggeringResponse(responseHeader ExtensionObjectDefinition, noOfAddResults int32, addResults []StatusCode, noOfAddDiagnosticInfos int32, addDiagnosticInfos []DiagnosticInfo, noOfRemoveResults int32, removeResults []StatusCode, noOfRemoveDiagnosticInfos int32, removeDiagnosticInfos []DiagnosticInfo) *_SetTriggeringResponse {
	if responseHeader == nil {
		panic("responseHeader of type ExtensionObjectDefinition for SetTriggeringResponse must not be nil")
	}
	_result := &_SetTriggeringResponse{
		ExtensionObjectDefinitionContract: NewExtensionObjectDefinition(),
		ResponseHeader:                    responseHeader,
		NoOfAddResults:                    noOfAddResults,
		AddResults:                        addResults,
		NoOfAddDiagnosticInfos:            noOfAddDiagnosticInfos,
		AddDiagnosticInfos:                addDiagnosticInfos,
		NoOfRemoveResults:                 noOfRemoveResults,
		RemoveResults:                     removeResults,
		NoOfRemoveDiagnosticInfos:         noOfRemoveDiagnosticInfos,
		RemoveDiagnosticInfos:             removeDiagnosticInfos,
	}
	_result.ExtensionObjectDefinitionContract.(*_ExtensionObjectDefinition)._SubType = _result
	return _result
}

///////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////
/////////////////////// Accessors for discriminator values.
///////////////////////

func (m *_SetTriggeringResponse) GetIdentifier() string {
	return "778"
}

///////////////////////
///////////////////////
///////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////

func (m *_SetTriggeringResponse) GetParent() ExtensionObjectDefinitionContract {
	return m.ExtensionObjectDefinitionContract
}

///////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////
/////////////////////// Accessors for property fields.
///////////////////////

func (m *_SetTriggeringResponse) GetResponseHeader() ExtensionObjectDefinition {
	return m.ResponseHeader
}

func (m *_SetTriggeringResponse) GetNoOfAddResults() int32 {
	return m.NoOfAddResults
}

func (m *_SetTriggeringResponse) GetAddResults() []StatusCode {
	return m.AddResults
}

func (m *_SetTriggeringResponse) GetNoOfAddDiagnosticInfos() int32 {
	return m.NoOfAddDiagnosticInfos
}

func (m *_SetTriggeringResponse) GetAddDiagnosticInfos() []DiagnosticInfo {
	return m.AddDiagnosticInfos
}

func (m *_SetTriggeringResponse) GetNoOfRemoveResults() int32 {
	return m.NoOfRemoveResults
}

func (m *_SetTriggeringResponse) GetRemoveResults() []StatusCode {
	return m.RemoveResults
}

func (m *_SetTriggeringResponse) GetNoOfRemoveDiagnosticInfos() int32 {
	return m.NoOfRemoveDiagnosticInfos
}

func (m *_SetTriggeringResponse) GetRemoveDiagnosticInfos() []DiagnosticInfo {
	return m.RemoveDiagnosticInfos
}

///////////////////////
///////////////////////
///////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////

// Deprecated: use the interface for direct cast
func CastSetTriggeringResponse(structType any) SetTriggeringResponse {
	if casted, ok := structType.(SetTriggeringResponse); ok {
		return casted
	}
	if casted, ok := structType.(*SetTriggeringResponse); ok {
		return *casted
	}
	return nil
}

func (m *_SetTriggeringResponse) GetTypeName() string {
	return "SetTriggeringResponse"
}

func (m *_SetTriggeringResponse) GetLengthInBits(ctx context.Context) uint16 {
	lengthInBits := uint16(m.ExtensionObjectDefinitionContract.(*_ExtensionObjectDefinition).getLengthInBits(ctx))

	// Simple field (responseHeader)
	lengthInBits += m.ResponseHeader.GetLengthInBits(ctx)

	// Simple field (noOfAddResults)
	lengthInBits += 32

	// Array field
	if len(m.AddResults) > 0 {
		for _curItem, element := range m.AddResults {
			arrayCtx := utils.CreateArrayContext(ctx, len(m.AddResults), _curItem)
			_ = arrayCtx
			_ = _curItem
			lengthInBits += element.(interface{ GetLengthInBits(context.Context) uint16 }).GetLengthInBits(arrayCtx)
		}
	}

	// Simple field (noOfAddDiagnosticInfos)
	lengthInBits += 32

	// Array field
	if len(m.AddDiagnosticInfos) > 0 {
		for _curItem, element := range m.AddDiagnosticInfos {
			arrayCtx := utils.CreateArrayContext(ctx, len(m.AddDiagnosticInfos), _curItem)
			_ = arrayCtx
			_ = _curItem
			lengthInBits += element.(interface{ GetLengthInBits(context.Context) uint16 }).GetLengthInBits(arrayCtx)
		}
	}

	// Simple field (noOfRemoveResults)
	lengthInBits += 32

	// Array field
	if len(m.RemoveResults) > 0 {
		for _curItem, element := range m.RemoveResults {
			arrayCtx := utils.CreateArrayContext(ctx, len(m.RemoveResults), _curItem)
			_ = arrayCtx
			_ = _curItem
			lengthInBits += element.(interface{ GetLengthInBits(context.Context) uint16 }).GetLengthInBits(arrayCtx)
		}
	}

	// Simple field (noOfRemoveDiagnosticInfos)
	lengthInBits += 32

	// Array field
	if len(m.RemoveDiagnosticInfos) > 0 {
		for _curItem, element := range m.RemoveDiagnosticInfos {
			arrayCtx := utils.CreateArrayContext(ctx, len(m.RemoveDiagnosticInfos), _curItem)
			_ = arrayCtx
			_ = _curItem
			lengthInBits += element.(interface{ GetLengthInBits(context.Context) uint16 }).GetLengthInBits(arrayCtx)
		}
	}

	return lengthInBits
}

func (m *_SetTriggeringResponse) GetLengthInBytes(ctx context.Context) uint16 {
	return m.GetLengthInBits(ctx) / 8
}

func (m *_SetTriggeringResponse) parse(ctx context.Context, readBuffer utils.ReadBuffer, parent *_ExtensionObjectDefinition, identifier string) (__setTriggeringResponse SetTriggeringResponse, err error) {
	m.ExtensionObjectDefinitionContract = parent
	parent._SubType = m
	positionAware := readBuffer
	_ = positionAware
	if pullErr := readBuffer.PullContext("SetTriggeringResponse"); pullErr != nil {
		return nil, errors.Wrap(pullErr, "Error pulling for SetTriggeringResponse")
	}
	currentPos := positionAware.GetPos()
	_ = currentPos

	responseHeader, err := ReadSimpleField[ExtensionObjectDefinition](ctx, "responseHeader", ReadComplex[ExtensionObjectDefinition](ExtensionObjectDefinitionParseWithBufferProducer[ExtensionObjectDefinition]((string)("394")), readBuffer))
	if err != nil {
		return nil, errors.Wrap(err, fmt.Sprintf("Error parsing 'responseHeader' field"))
	}
	m.ResponseHeader = responseHeader

	noOfAddResults, err := ReadSimpleField(ctx, "noOfAddResults", ReadSignedInt(readBuffer, uint8(32)))
	if err != nil {
		return nil, errors.Wrap(err, fmt.Sprintf("Error parsing 'noOfAddResults' field"))
	}
	m.NoOfAddResults = noOfAddResults

	addResults, err := ReadCountArrayField[StatusCode](ctx, "addResults", ReadComplex[StatusCode](StatusCodeParseWithBuffer, readBuffer), uint64(noOfAddResults))
	if err != nil {
		return nil, errors.Wrap(err, fmt.Sprintf("Error parsing 'addResults' field"))
	}
	m.AddResults = addResults

	noOfAddDiagnosticInfos, err := ReadSimpleField(ctx, "noOfAddDiagnosticInfos", ReadSignedInt(readBuffer, uint8(32)))
	if err != nil {
		return nil, errors.Wrap(err, fmt.Sprintf("Error parsing 'noOfAddDiagnosticInfos' field"))
	}
	m.NoOfAddDiagnosticInfos = noOfAddDiagnosticInfos

	addDiagnosticInfos, err := ReadCountArrayField[DiagnosticInfo](ctx, "addDiagnosticInfos", ReadComplex[DiagnosticInfo](DiagnosticInfoParseWithBuffer, readBuffer), uint64(noOfAddDiagnosticInfos))
	if err != nil {
		return nil, errors.Wrap(err, fmt.Sprintf("Error parsing 'addDiagnosticInfos' field"))
	}
	m.AddDiagnosticInfos = addDiagnosticInfos

	noOfRemoveResults, err := ReadSimpleField(ctx, "noOfRemoveResults", ReadSignedInt(readBuffer, uint8(32)))
	if err != nil {
		return nil, errors.Wrap(err, fmt.Sprintf("Error parsing 'noOfRemoveResults' field"))
	}
	m.NoOfRemoveResults = noOfRemoveResults

	removeResults, err := ReadCountArrayField[StatusCode](ctx, "removeResults", ReadComplex[StatusCode](StatusCodeParseWithBuffer, readBuffer), uint64(noOfRemoveResults))
	if err != nil {
		return nil, errors.Wrap(err, fmt.Sprintf("Error parsing 'removeResults' field"))
	}
	m.RemoveResults = removeResults

	noOfRemoveDiagnosticInfos, err := ReadSimpleField(ctx, "noOfRemoveDiagnosticInfos", ReadSignedInt(readBuffer, uint8(32)))
	if err != nil {
		return nil, errors.Wrap(err, fmt.Sprintf("Error parsing 'noOfRemoveDiagnosticInfos' field"))
	}
	m.NoOfRemoveDiagnosticInfos = noOfRemoveDiagnosticInfos

	removeDiagnosticInfos, err := ReadCountArrayField[DiagnosticInfo](ctx, "removeDiagnosticInfos", ReadComplex[DiagnosticInfo](DiagnosticInfoParseWithBuffer, readBuffer), uint64(noOfRemoveDiagnosticInfos))
	if err != nil {
		return nil, errors.Wrap(err, fmt.Sprintf("Error parsing 'removeDiagnosticInfos' field"))
	}
	m.RemoveDiagnosticInfos = removeDiagnosticInfos

	if closeErr := readBuffer.CloseContext("SetTriggeringResponse"); closeErr != nil {
		return nil, errors.Wrap(closeErr, "Error closing for SetTriggeringResponse")
	}

	return m, nil
}

func (m *_SetTriggeringResponse) Serialize() ([]byte, error) {
	wb := utils.NewWriteBufferByteBased(utils.WithInitialSizeForByteBasedBuffer(int(m.GetLengthInBytes(context.Background()))))
	if err := m.SerializeWithWriteBuffer(context.Background(), wb); err != nil {
		return nil, err
	}
	return wb.GetBytes(), nil
}

func (m *_SetTriggeringResponse) SerializeWithWriteBuffer(ctx context.Context, writeBuffer utils.WriteBuffer) error {
	positionAware := writeBuffer
	_ = positionAware
	log := zerolog.Ctx(ctx)
	_ = log
	ser := func() error {
		if pushErr := writeBuffer.PushContext("SetTriggeringResponse"); pushErr != nil {
			return errors.Wrap(pushErr, "Error pushing for SetTriggeringResponse")
		}

		if err := WriteSimpleField[ExtensionObjectDefinition](ctx, "responseHeader", m.GetResponseHeader(), WriteComplex[ExtensionObjectDefinition](writeBuffer)); err != nil {
			return errors.Wrap(err, "Error serializing 'responseHeader' field")
		}

		if err := WriteSimpleField[int32](ctx, "noOfAddResults", m.GetNoOfAddResults(), WriteSignedInt(writeBuffer, 32)); err != nil {
			return errors.Wrap(err, "Error serializing 'noOfAddResults' field")
		}

		if err := WriteComplexTypeArrayField(ctx, "addResults", m.GetAddResults(), writeBuffer); err != nil {
			return errors.Wrap(err, "Error serializing 'addResults' field")
		}

		if err := WriteSimpleField[int32](ctx, "noOfAddDiagnosticInfos", m.GetNoOfAddDiagnosticInfos(), WriteSignedInt(writeBuffer, 32)); err != nil {
			return errors.Wrap(err, "Error serializing 'noOfAddDiagnosticInfos' field")
		}

		if err := WriteComplexTypeArrayField(ctx, "addDiagnosticInfos", m.GetAddDiagnosticInfos(), writeBuffer); err != nil {
			return errors.Wrap(err, "Error serializing 'addDiagnosticInfos' field")
		}

		if err := WriteSimpleField[int32](ctx, "noOfRemoveResults", m.GetNoOfRemoveResults(), WriteSignedInt(writeBuffer, 32)); err != nil {
			return errors.Wrap(err, "Error serializing 'noOfRemoveResults' field")
		}

		if err := WriteComplexTypeArrayField(ctx, "removeResults", m.GetRemoveResults(), writeBuffer); err != nil {
			return errors.Wrap(err, "Error serializing 'removeResults' field")
		}

		if err := WriteSimpleField[int32](ctx, "noOfRemoveDiagnosticInfos", m.GetNoOfRemoveDiagnosticInfos(), WriteSignedInt(writeBuffer, 32)); err != nil {
			return errors.Wrap(err, "Error serializing 'noOfRemoveDiagnosticInfos' field")
		}

		if err := WriteComplexTypeArrayField(ctx, "removeDiagnosticInfos", m.GetRemoveDiagnosticInfos(), writeBuffer); err != nil {
			return errors.Wrap(err, "Error serializing 'removeDiagnosticInfos' field")
		}

		if popErr := writeBuffer.PopContext("SetTriggeringResponse"); popErr != nil {
			return errors.Wrap(popErr, "Error popping for SetTriggeringResponse")
		}
		return nil
	}
	return m.ExtensionObjectDefinitionContract.(*_ExtensionObjectDefinition).serializeParent(ctx, writeBuffer, m, ser)
}

func (m *_SetTriggeringResponse) IsSetTriggeringResponse() {}

func (m *_SetTriggeringResponse) DeepCopy() any {
	return m.deepCopy()
}

func (m *_SetTriggeringResponse) deepCopy() *_SetTriggeringResponse {
	if m == nil {
		return nil
	}
	_SetTriggeringResponseCopy := &_SetTriggeringResponse{
		m.ExtensionObjectDefinitionContract.(*_ExtensionObjectDefinition).deepCopy(),
		m.ResponseHeader.DeepCopy().(ExtensionObjectDefinition),
		m.NoOfAddResults,
		utils.DeepCopySlice[StatusCode, StatusCode](m.AddResults),
		m.NoOfAddDiagnosticInfos,
		utils.DeepCopySlice[DiagnosticInfo, DiagnosticInfo](m.AddDiagnosticInfos),
		m.NoOfRemoveResults,
		utils.DeepCopySlice[StatusCode, StatusCode](m.RemoveResults),
		m.NoOfRemoveDiagnosticInfos,
		utils.DeepCopySlice[DiagnosticInfo, DiagnosticInfo](m.RemoveDiagnosticInfos),
	}
	m.ExtensionObjectDefinitionContract.(*_ExtensionObjectDefinition)._SubType = m
	return _SetTriggeringResponseCopy
}

func (m *_SetTriggeringResponse) String() string {
	if m == nil {
		return "<nil>"
	}
	writeBuffer := utils.NewWriteBufferBoxBasedWithOptions(true, true)
	if err := writeBuffer.WriteSerializable(context.Background(), m); err != nil {
		return err.Error()
	}
	return writeBuffer.GetBox().String()
}
