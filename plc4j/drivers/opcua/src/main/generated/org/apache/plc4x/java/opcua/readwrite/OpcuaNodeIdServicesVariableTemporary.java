/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.apache.plc4x.java.opcua.readwrite;

import java.util.HashMap;
import java.util.Map;

// Code generated by code-generation. DO NOT EDIT.

public enum OpcuaNodeIdServicesVariableTemporary {
  TemporaryFileTransferType_ClientProcessingTimeout((int) 15745L),
  TemporaryFileTransferType_GenerateFileForRead_InputArguments((int) 15747L),
  TemporaryFileTransferType_GenerateFileForRead_OutputArguments((int) 15748L),
  TemporaryFileTransferType_GenerateFileForWrite_OutputArguments((int) 15750L),
  TemporaryFileTransferType_CloseAndCommit_InputArguments((int) 15752L),
  TemporaryFileTransferType_CloseAndCommit_OutputArguments((int) 15753L),
  TemporaryFileTransferType_TransferState_Placeholder_CurrentState((int) 15755L),
  TemporaryFileTransferType_TransferState_Placeholder_CurrentState_Id((int) 15756L),
  TemporaryFileTransferType_TransferState_Placeholder_CurrentState_Name((int) 15757L),
  TemporaryFileTransferType_TransferState_Placeholder_CurrentState_Number((int) 15758L),
  TemporaryFileTransferType_TransferState_Placeholder_CurrentState_EffectiveDisplayName(
      (int) 15759L),
  TemporaryFileTransferType_TransferState_Placeholder_LastTransition((int) 15760L),
  TemporaryFileTransferType_TransferState_Placeholder_LastTransition_Id((int) 15761L),
  TemporaryFileTransferType_TransferState_Placeholder_LastTransition_Name((int) 15762L),
  TemporaryFileTransferType_TransferState_Placeholder_LastTransition_Number((int) 15763L),
  TemporaryFileTransferType_TransferState_Placeholder_LastTransition_TransitionTime((int) 15764L),
  TemporaryFileTransferType_TransferState_Placeholder_LastTransition_EffectiveTransitionTime(
      (int) 15765L),
  TemporaryFileTransferType_GenerateFileForWrite_InputArguments((int) 16359L),
  TemporaryFileTransferType_TransferState_Placeholder_AvailableStates((int) 17637L),
  TemporaryFileTransferType_TransferState_Placeholder_AvailableTransitions((int) 17638L);
  private static final Map<Integer, OpcuaNodeIdServicesVariableTemporary> map;

  static {
    map = new HashMap<>();
    for (OpcuaNodeIdServicesVariableTemporary value :
        OpcuaNodeIdServicesVariableTemporary.values()) {
      map.put((int) value.getValue(), value);
    }
  }

  private final int value;

  OpcuaNodeIdServicesVariableTemporary(int value) {
    this.value = value;
  }

  public int getValue() {
    return value;
  }

  public static OpcuaNodeIdServicesVariableTemporary enumForValue(int value) {
    return map.get(value);
  }

  public static Boolean isDefined(int value) {
    return map.containsKey(value);
  }
}
