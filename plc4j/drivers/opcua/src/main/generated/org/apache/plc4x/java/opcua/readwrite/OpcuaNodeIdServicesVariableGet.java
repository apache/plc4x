/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.apache.plc4x.java.opcua.readwrite;

import java.util.HashMap;
import java.util.Map;

// Code generated by code-generation. DO NOT EDIT.

public enum OpcuaNodeIdServicesVariableGet {
  GetMonitoredItemsMethodType_InputArguments((int) 11496L),
  GetMonitoredItemsMethodType_OutputArguments((int) 11497L),
  GetPositionMethodType_InputArguments((int) 11749L),
  GetPositionMethodType_OutputArguments((int) 11750L),
  GetRejectedListMethodType_OutputArguments((int) 12774L),
  GetSecurityKeysMethodType_InputArguments((int) 15219L),
  GetSecurityKeysMethodType_OutputArguments((int) 15220L),
  GetSecurityGroupMethodType_InputArguments((int) 15450L),
  GetSecurityGroupMethodType_OutputArguments((int) 15451L),
  GetEncryptingKeyMethodType_InputArguments((int) 17532L),
  GetEncryptingKeyMethodType_OutputArguments((int) 17533L),
  GetConnectionMethodType_InputArguments((int) 23727L),
  GetConnectionMethodType_OutputArguments((int) 23728L),
  GetWriterGroupMethodType_InputArguments((int) 23746L),
  GetWriterGroupMethodType_OutputArguments((int) 23747L),
  GetReaderGroupMethodType_InputArguments((int) 23768L),
  GetReaderGroupMethodType_OutputArguments((int) 23769L),
  GetDataSetWriterMethodType_OutputArguments((int) 23780L),
  GetDataSetReaderMethodType_OutputArguments((int) 23791L),
  GetGroupMembershipsMethodType_OutputArguments((int) 25155L),
  GetCertificatesMethodType_InputArguments((int) 32283L),
  GetCertificatesMethodType_OutputArguments((int) 32284L);
  private static final Map<Integer, OpcuaNodeIdServicesVariableGet> map;

  static {
    map = new HashMap<>();
    for (OpcuaNodeIdServicesVariableGet value : OpcuaNodeIdServicesVariableGet.values()) {
      map.put((int) value.getValue(), value);
    }
  }

  private final int value;

  OpcuaNodeIdServicesVariableGet(int value) {
    this.value = value;
  }

  public int getValue() {
    return value;
  }

  public static OpcuaNodeIdServicesVariableGet enumForValue(int value) {
    return map.get(value);
  }

  public static Boolean isDefined(int value) {
    return map.containsKey(value);
  }
}
