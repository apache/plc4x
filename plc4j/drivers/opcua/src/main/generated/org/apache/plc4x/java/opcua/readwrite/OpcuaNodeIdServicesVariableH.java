/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.apache.plc4x.java.opcua.readwrite;

import java.util.HashMap;
import java.util.Map;

// Code generated by code-generation. DO NOT EDIT.

public enum OpcuaNodeIdServicesVariableH {
  HAConfiguration_AggregateConfiguration_TreatUncertainAsBad((int) 11204L),
  HAConfiguration_AggregateConfiguration_PercentDataBad((int) 11205L),
  HAConfiguration_AggregateConfiguration_PercentDataGood((int) 11206L),
  HAConfiguration_AggregateConfiguration_UseSlopedExtrapolation((int) 11207L),
  HAConfiguration_Stepped((int) 11208L),
  HAConfiguration_Definition((int) 11209L),
  HAConfiguration_MaxTimeInterval((int) 11210L),
  HAConfiguration_MinTimeInterval((int) 11211L),
  HAConfiguration_ExceptionDeviation((int) 11212L),
  HAConfiguration_ExceptionDeviationFormat((int) 11213L),
  HAConfiguration_StartOfArchive((int) 11503L),
  HAConfiguration_StartOfOnlineArchive((int) 11504L),
  HAConfiguration_ServerTimestampSupported((int) 19093L),
  HAConfiguration_MaxTimeStoredValues((int) 32635L),
  HAConfiguration_MaxCountStoredValues((int) 32636L);
  private static final Map<Integer, OpcuaNodeIdServicesVariableH> map;

  static {
    map = new HashMap<>();
    for (OpcuaNodeIdServicesVariableH value : OpcuaNodeIdServicesVariableH.values()) {
      map.put((int) value.getValue(), value);
    }
  }

  private final int value;

  OpcuaNodeIdServicesVariableH(int value) {
    this.value = value;
  }

  public int getValue() {
    return value;
  }

  public static OpcuaNodeIdServicesVariableH enumForValue(int value) {
    return map.get(value);
  }

  public static Boolean isDefined(int value) {
    return map.containsKey(value);
  }
}
