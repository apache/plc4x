/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.apache.plc4x.java.opcua.readwrite;

import java.util.HashMap;
import java.util.Map;

// Code generated by code-generation. DO NOT EDIT.

public enum OpcuaNodeIdServicesVariableHistory {
  HistoryServerCapabilitiesType_AccessHistoryDataCapability((int) 2331L),
  HistoryServerCapabilitiesType_AccessHistoryEventsCapability((int) 2332L),
  HistoryServerCapabilitiesType_InsertDataCapability((int) 2334L),
  HistoryServerCapabilitiesType_ReplaceDataCapability((int) 2335L),
  HistoryServerCapabilitiesType_UpdateDataCapability((int) 2336L),
  HistoryServerCapabilitiesType_DeleteRawCapability((int) 2337L),
  HistoryServerCapabilitiesType_DeleteAtTimeCapability((int) 2338L),
  HistoryServerCapabilities_AccessHistoryDataCapability((int) 11193L),
  HistoryServerCapabilities_InsertDataCapability((int) 11196L),
  HistoryServerCapabilities_ReplaceDataCapability((int) 11197L),
  HistoryServerCapabilities_UpdateDataCapability((int) 11198L),
  HistoryServerCapabilities_DeleteRawCapability((int) 11199L),
  HistoryServerCapabilities_DeleteAtTimeCapability((int) 11200L),
  HistoryServerCapabilities_AccessHistoryEventsCapability((int) 11242L),
  HistoryServerCapabilitiesType_MaxReturnDataValues((int) 11268L),
  HistoryServerCapabilitiesType_MaxReturnEventValues((int) 11269L),
  HistoryServerCapabilitiesType_InsertAnnotationCapability((int) 11270L),
  HistoryServerCapabilities_MaxReturnDataValues((int) 11273L),
  HistoryServerCapabilities_MaxReturnEventValues((int) 11274L),
  HistoryServerCapabilities_InsertAnnotationCapability((int) 11275L),
  HistoryServerCapabilitiesType_InsertEventCapability((int) 11278L),
  HistoryServerCapabilitiesType_ReplaceEventCapability((int) 11279L),
  HistoryServerCapabilitiesType_UpdateEventCapability((int) 11280L),
  HistoryServerCapabilities_InsertEventCapability((int) 11281L),
  HistoryServerCapabilities_ReplaceEventCapability((int) 11282L),
  HistoryServerCapabilities_UpdateEventCapability((int) 11283L),
  HistoryServerCapabilitiesType_DeleteEventCapability((int) 11501L),
  HistoryServerCapabilities_DeleteEventCapability((int) 11502L),
  HistoryUpdateType_EnumValues((int) 11884L),
  HistoryServerCapabilities_ServerTimestampSupported((int) 19091L),
  HistoryServerCapabilitiesType_ServerTimestampSupported((int) 19094L);
  private static final Map<Integer, OpcuaNodeIdServicesVariableHistory> map;

  static {
    map = new HashMap<>();
    for (OpcuaNodeIdServicesVariableHistory value : OpcuaNodeIdServicesVariableHistory.values()) {
      map.put((int) value.getValue(), value);
    }
  }

  private final int value;

  OpcuaNodeIdServicesVariableHistory(int value) {
    this.value = value;
  }

  public int getValue() {
    return value;
  }

  public static OpcuaNodeIdServicesVariableHistory enumForValue(int value) {
    return map.get(value);
  }

  public static Boolean isDefined(int value) {
    return map.containsKey(value);
  }
}
