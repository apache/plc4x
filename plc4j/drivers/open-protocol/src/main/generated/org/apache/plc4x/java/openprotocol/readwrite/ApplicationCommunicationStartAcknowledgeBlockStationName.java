/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.apache.plc4x.java.openprotocol.readwrite;

import static org.apache.plc4x.java.spi.codegen.fields.FieldReaderFactory.*;
import static org.apache.plc4x.java.spi.codegen.fields.FieldWriterFactory.*;
import static org.apache.plc4x.java.spi.codegen.io.DataReaderFactory.*;
import static org.apache.plc4x.java.spi.codegen.io.DataWriterFactory.*;
import static org.apache.plc4x.java.spi.generation.StaticHelper.*;

import java.time.*;
import java.util.*;
import org.apache.plc4x.java.api.exceptions.*;
import org.apache.plc4x.java.api.value.*;
import org.apache.plc4x.java.spi.codegen.*;
import org.apache.plc4x.java.spi.codegen.fields.*;
import org.apache.plc4x.java.spi.codegen.io.*;
import org.apache.plc4x.java.spi.generation.*;

// Code generated by code-generation. DO NOT EDIT.

public class ApplicationCommunicationStartAcknowledgeBlockStationName
    extends ApplicationCommunicationStartAcknowledgeBlock implements Message {

  // Accessors for discriminator values.
  public Integer getBlockType() {
    return (int) 15;
  }

  // Properties.
  protected final String stationName;

  public ApplicationCommunicationStartAcknowledgeBlockStationName(String stationName) {
    super();
    this.stationName = stationName;
  }

  public String getStationName() {
    return stationName;
  }

  @Override
  protected void serializeApplicationCommunicationStartAcknowledgeBlockChild(
      WriteBuffer writeBuffer) throws SerializationException {
    PositionAware positionAware = writeBuffer;
    int startPos = positionAware.getPos();
    writeBuffer.pushContext("ApplicationCommunicationStartAcknowledgeBlockStationName");

    // Simple Field (stationName)
    writeSimpleField(
        "stationName",
        stationName,
        writeString(writeBuffer, 200),
        WithOption.WithEncoding("ASCII"));

    writeBuffer.popContext("ApplicationCommunicationStartAcknowledgeBlockStationName");
  }

  @Override
  public int getLengthInBytes() {
    return (int) Math.ceil((float) getLengthInBits() / 8.0);
  }

  @Override
  public int getLengthInBits() {
    int lengthInBits = super.getLengthInBits();
    ApplicationCommunicationStartAcknowledgeBlockStationName _value = this;

    // Simple field (stationName)
    lengthInBits += 200;

    return lengthInBits;
  }

  public static ApplicationCommunicationStartAcknowledgeBlockStationNameBuilder staticParseBuilder(
      ReadBuffer readBuffer) throws ParseException {
    readBuffer.pullContext("ApplicationCommunicationStartAcknowledgeBlockStationName");
    PositionAware positionAware = readBuffer;
    int startPos = positionAware.getPos();
    int curPos;

    String stationName =
        readSimpleField(
            "stationName", readString(readBuffer, 200), WithOption.WithEncoding("ASCII"));

    readBuffer.closeContext("ApplicationCommunicationStartAcknowledgeBlockStationName");
    // Create the instance
    return new ApplicationCommunicationStartAcknowledgeBlockStationNameBuilder(stationName);
  }

  public static class ApplicationCommunicationStartAcknowledgeBlockStationNameBuilder
      implements ApplicationCommunicationStartAcknowledgeBlock
          .ApplicationCommunicationStartAcknowledgeBlockBuilder {
    private final String stationName;

    public ApplicationCommunicationStartAcknowledgeBlockStationNameBuilder(String stationName) {

      this.stationName = stationName;
    }

    public ApplicationCommunicationStartAcknowledgeBlockStationName build() {
      ApplicationCommunicationStartAcknowledgeBlockStationName
          applicationCommunicationStartAcknowledgeBlockStationName =
              new ApplicationCommunicationStartAcknowledgeBlockStationName(stationName);
      return applicationCommunicationStartAcknowledgeBlockStationName;
    }
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (!(o instanceof ApplicationCommunicationStartAcknowledgeBlockStationName)) {
      return false;
    }
    ApplicationCommunicationStartAcknowledgeBlockStationName that =
        (ApplicationCommunicationStartAcknowledgeBlockStationName) o;
    return (getStationName() == that.getStationName()) && super.equals(that) && true;
  }

  @Override
  public int hashCode() {
    return Objects.hash(super.hashCode(), getStationName());
  }

  @Override
  public String toString() {
    WriteBufferBoxBased writeBufferBoxBased = new WriteBufferBoxBased(true, true);
    try {
      writeBufferBoxBased.writeSerializable(this);
    } catch (SerializationException e) {
      throw new RuntimeException(e);
    }
    return "\n" + writeBufferBoxBased.getBox().toString() + "\n";
  }
}
