<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

      https://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.apache.plc4x</groupId>
    <artifactId>plc4j</artifactId>
    <version>0.11.0-SNAPSHOT</version>
  </parent>

  <groupId>org.apache.plc4x.examples</groupId>
  <artifactId>plc4j-examples</artifactId>
  <packaging>pom</packaging>

  <name>PLC4J: Examples</name>
  <description>Parent of all java based application example modules.</description>

  <properties>
    <app.main.class>override-this-property-in-application-pom</app.main.class>
  </properties>

  <modules>
    <module>hello-cloud-azure</module>
    <module>hello-cloud-google</module>
    <module>hello-discovery</module>
    <module>hello-connectivity-mqtt</module>
    <module>hello-influx-data-collection</module>
    <!-- Disabled due to edgent not existing anymore-->
    <!--module>hello-integration-iotdb</module-->
    <!--module>hello-nats</module-->
    <module>hello-opm</module>
    <module>hello-webservice</module>
    <module>hello-world-kotlin</module>
    <module>hello-world-plc4x-discover-and-browse</module>
    <module>hello-world-plc4x-read</module>
    <module>hello-world-plc4x-subscribe</module>
    <module>hello-world-plc4x-write</module>
    <module>poll-loop</module>
    <module>plc4j-s7event</module>
  </modules>

  <build>
    <plugins>
      <!-- This is just examples including these checks here requires an insane amount of housekeeping. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <!-- Build a fat jar containing all dependencies -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-uber-jar</id>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers combine.children="append">
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>${app.main.class}</mainClass>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <configuration>
          <usedDependencies combine.children="append">
            <usedDependency>org.apache.plc4x:plc4j-driver-ab-eth</usedDependency>
            <usedDependency>org.apache.plc4x:plc4j-driver-ads</usedDependency>
            <usedDependency>org.apache.plc4x:plc4j-driver-canopen</usedDependency>
            <usedDependency>org.apache.plc4x:plc4j-driver-eip</usedDependency>
            <usedDependency>org.apache.plc4x:plc4j-driver-firmata</usedDependency>
            <usedDependency>org.apache.plc4x:plc4j-driver-knxnetip</usedDependency>
            <usedDependency>org.apache.plc4x:plc4j-driver-modbus</usedDependency>
            <usedDependency>org.apache.plc4x:plc4j-driver-opcua</usedDependency>
            <usedDependency>org.apache.plc4x:plc4j-driver-plc4x</usedDependency>
            <usedDependency>org.apache.plc4x:plc4j-driver-profinet</usedDependency>
            <usedDependency>org.apache.plc4x:plc4j-driver-s7</usedDependency>
            <usedDependency>org.apache.plc4x:plc4j-driver-simulated</usedDependency>
          </usedDependencies>
        </configuration>
      </plugin>
    </plugins>

    <pluginManagement>
      <plugins>
        <!-- No need to deploy examples in a maven repo -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <configuration>
            <skip>true</skip>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <!-- Change the default scope to "compile" to include logback in all examples -->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>${logback.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
        <scope>compile</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- Required driver implementation -->
    <dependency>
      <groupId>org.apache.plc4x</groupId>
      <artifactId>plc4j-driver-ab-eth</artifactId>
      <version>0.11.0-SNAPSHOT</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.plc4x</groupId>
      <artifactId>plc4j-driver-ads</artifactId>
      <version>0.11.0-SNAPSHOT</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.plc4x</groupId>
      <artifactId>plc4j-driver-canopen</artifactId>
      <version>0.11.0-SNAPSHOT</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.plc4x</groupId>
      <artifactId>plc4j-driver-eip</artifactId>
      <version>0.11.0-SNAPSHOT</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.plc4x</groupId>
      <artifactId>plc4j-driver-firmata</artifactId>
      <version>0.11.0-SNAPSHOT</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.plc4x</groupId>
      <artifactId>plc4j-driver-knxnetip</artifactId>
      <version>0.11.0-SNAPSHOT</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.plc4x</groupId>
      <artifactId>plc4j-driver-modbus</artifactId>
      <version>0.11.0-SNAPSHOT</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.plc4x</groupId>
      <artifactId>plc4j-driver-opcua</artifactId>
      <version>0.11.0-SNAPSHOT</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.plc4x</groupId>
      <artifactId>plc4j-driver-plc4x</artifactId>
      <version>0.11.0-SNAPSHOT</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.plc4x</groupId>
      <artifactId>plc4j-driver-profinet</artifactId>
      <version>0.11.0-SNAPSHOT</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.plc4x</groupId>
      <artifactId>plc4j-driver-s7</artifactId>
      <version>0.11.0-SNAPSHOT</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.plc4x</groupId>
      <artifactId>plc4j-driver-simulated</artifactId>
      <version>0.11.0-SNAPSHOT</version>
      <scope>runtime</scope>
    </dependency>
  </dependencies>

</project>